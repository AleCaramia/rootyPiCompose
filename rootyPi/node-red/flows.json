[
    {
        "id": "f857e0827ca4bf08",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "075376242320f0ef",
        "type": "tab",
        "label": "Log in",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "785f53d943d8482e",
        "type": "tab",
        "label": "Plant info tab",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d8e05e37459eb50e",
        "type": "tab",
        "label": "User options",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "420e20ab72977e1d",
        "type": "tab",
        "label": "Light_flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7345f09d639edea5",
        "type": "tab",
        "label": "water flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8fa8102ddd6213f9",
        "type": "tab",
        "label": "Operations about registratios",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f2b7d1cdce5c4bfe",
        "type": "tab",
        "label": "Charts",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "abef47bed1338c6e",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a16d4bc57e6d3071",
        "type": "tab",
        "label": "Flow 2"
    },
    {
        "id": "b02abf6bf192d627",
        "type": "group",
        "z": "785f53d943d8482e",
        "name": "Url generator",
        "style": {
            "label": true
        },
        "nodes": [
            "059ba424cf1be431",
            "3f5c726028251213",
            "fe158eb9f7842053",
            "dcc1f4b1a394506d"
        ],
        "x": 2954,
        "y": 199,
        "w": 492,
        "h": 202
    },
    {
        "id": "e1bab6a23adfa149",
        "type": "group",
        "z": "075376242320f0ef",
        "name": "Log in",
        "style": {
            "label": true
        },
        "nodes": [
            "d936ff1999aab9ac",
            "ef98da3bc152d665",
            "d4eaa710b712159f",
            "a2575c9248f7c543",
            "adbf2c75cb48dcfa",
            "b3b2fc173a919a27",
            "54d3e36a14904d1e",
            "90d34be1bca09fc8",
            "9291dc66265b4327",
            "47f3a8ced08ad6a4",
            "17d5940c01cd21a1",
            "f76681518c8fcec5",
            "b9f3ace8daf4efdd",
            "ab73415461727f6e",
            "d6305b1fa39c6fd7",
            "69cf99c06dd2b4d0",
            "2776a6603a21cebb",
            "bc64e25371311bc2",
            "45006b35b49531a3",
            "a346b3d266193707",
            "02177c4d978732d7",
            "4c154482d932806f",
            "54bd0ef8acc9e736",
            "e915590860d77cce",
            "1b4165490c40c1d6",
            "5432efde2a8d6982",
            "8159290f41537664",
            "3688461ce0b4fb80",
            "df58c5bceb4421cd",
            "3c55c5bf32045f5c",
            "b325a033e170665d",
            "52760fe5192a6b17",
            "1a89b1fd344d79eb",
            "9b79f9b27d5eae08",
            "a9e0ba359818474c",
            "b6a70f63c6a2d291",
            "66553be4a0784414",
            "c987c8111d037a82",
            "aeca84dc86ba7212",
            "05968cffd6eb55d0",
            "43302dd10b5655e7",
            "46b5902210627630",
            "d648a13e2eaf0ad5",
            "3d34fe96cb41e340",
            "59d92917eea4e404"
        ],
        "x": 14,
        "y": 99,
        "w": 2312,
        "h": 722
    },
    {
        "id": "da60ea094f9fae74",
        "type": "group",
        "z": "8fa8102ddd6213f9",
        "name": "Check online services",
        "style": {
            "label": true
        },
        "nodes": [
            "7724a27acc619f9c",
            "b1339271bc549447",
            "0f3a4304daa4ba5c",
            "ae03fc51560aae3c",
            "497c65e39dd230d8"
        ],
        "x": 54,
        "y": 619,
        "w": 952,
        "h": 182
    },
    {
        "id": "e6c4aaa3566ad829",
        "type": "group",
        "z": "8fa8102ddd6213f9",
        "name": "Register and save online services",
        "style": {
            "label": true
        },
        "nodes": [
            "1314dcec3ebab8b8",
            "a1a60e9655d6f741",
            "46df1d3d9b00eac4",
            "8b51178bff4916c9",
            "40534a3910705aae",
            "3cdf817095039d1d",
            "f2c2c453fc059f3f",
            "77cc26df612d1f54",
            "d3dd0254ee70784d",
            "f64e64a2ef64c852",
            "b96219db0aeefd29"
        ],
        "x": 34,
        "y": 159,
        "w": 1572,
        "h": 262
    },
    {
        "id": "1167eb289c340144",
        "type": "group",
        "z": "d8e05e37459eb50e",
        "name": "Add plant",
        "style": {
            "label": true
        },
        "nodes": [
            "205746116f4c2e47",
            "d2997b320dbc147d",
            "a8923480b36f5932",
            "aee5b849fa4bfac7",
            "dd6200c65eacd514",
            "b5f8d6462425d98d",
            "881f8f2d6597c088",
            "c95bca5680e5e288",
            "ddd5fbd4061ad912",
            "2f3bc360bc7fb70a",
            "4b6db7c16dc843c8",
            "5b3afc0e1e29be08",
            "c36357bdb5531f78",
            "aac34bcadb7ff94d",
            "68126b66041a1b9f",
            "e8a626f925e2d1b4",
            "3ae00d22074667a5",
            "f72fae14d274ddfc",
            "9b853bd5ed23df61",
            "e63f7e3449184563",
            "b4ef7ff50fe64395",
            "725d4a493984679c",
            "9b04a441f222c5b5",
            "d20fab234f28a810",
            "d52ba22ad87bd43b",
            "39a9451eda1333c1",
            "fc73b3126d9de4a9",
            "ded0127bd1ea067c",
            "8990fc281601b01d",
            "7bab5d2d56cf4653"
        ],
        "x": 14,
        "y": 259,
        "w": 2112,
        "h": 442
    },
    {
        "id": "fe9e7ffa346a55af",
        "type": "group",
        "z": "d8e05e37459eb50e",
        "name": "Delete plant",
        "style": {
            "label": true
        },
        "nodes": [
            "972185aac73aa389",
            "6283ac5c609cf6b8",
            "f4f1ac82e233983a",
            "b60a0b5f8bb62b28",
            "aeedd48828e6154f",
            "9e8083a45bdbc457",
            "d1f8db1188c99689",
            "9009d2fc832a6650",
            "2923488f1268056b",
            "4a10853dfb86da80",
            "1061a660338c3c8b",
            "596c6fd6b6363856",
            "d9427fc637f97056",
            "bf0271361f3611e3",
            "648567d6b13c3f30",
            "33fb36433d73acb5",
            "e6986e9ff084f672",
            "34b2f3e9edb87c0c",
            "8362bfe5ede10fa6",
            "76a9b599909d3fc8",
            "18da918892bddce2",
            "2f0cfd438fd87152",
            "baceeb4063def798",
            "65ce55230ef0af1a",
            "08678b0a13896242",
            "d613dabea3643ff2"
        ],
        "x": 34,
        "y": 759,
        "w": 2592,
        "h": 262
    },
    {
        "id": "ae0aa142fe4b8c55",
        "type": "group",
        "z": "d8e05e37459eb50e",
        "name": "Account deletion",
        "style": {
            "label": true
        },
        "nodes": [
            "38200b3c9a499f10",
            "ba4f1927460ba5d3",
            "6917a559296c136b",
            "a4f21654570ffbc1",
            "2bb4b8523a447533",
            "097ea17c93278929",
            "fd272948bd036f4c",
            "c7579521f90149a4",
            "a1d56d1552642ef8",
            "d00f853f7ce95464",
            "be7763dc40d34ad8",
            "bccb1aa841524783",
            "b4c0554f5747405f",
            "0864d2d36012f7a7",
            "05462e3fba4c6eaa",
            "0d083e036d14f5fb",
            "553f26cc2b246d9b",
            "9b515e7a7a54c3e7",
            "53f52b60e7f2d3a4"
        ],
        "x": 14,
        "y": 59,
        "w": 1722,
        "h": 202
    },
    {
        "id": "fb36f2e94f5d2da4",
        "type": "group",
        "z": "785f53d943d8482e",
        "name": "User options",
        "style": {
            "label": true
        },
        "nodes": [
            "24ec5c3c3b135336",
            "8e6d26fb2626e146",
            "b01dc798e0c2cf83",
            "aa734ce7f3bbc633",
            "e7f08119e945da46",
            "9c7b06964a4ba9d6",
            "64d2492b119c63ea",
            "2772fb529fcf83ab",
            "f3d07133f7eda261",
            "4ada2e0b45349fc7",
            "e73397e7a65b2d9c",
            "a841450211115ca7"
        ],
        "x": 54,
        "y": 559,
        "w": 682,
        "h": 282
    },
    {
        "id": "8957198026b47e18",
        "type": "mqtt-broker",
        "name": "eclipse",
        "broker": "mqtt.eclipseprojects.io",
        "port": "1883",
        "clientid": "Red-node",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "48688b2bd3395750",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#44a503",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#09772f",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#44a503",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#44a503",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#63f004",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#44a503",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "6eafc24cd03c3171",
        "type": "ui_tab",
        "name": "Access",
        "icon": "fa-users",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "363a57f6eb311ab9",
        "type": "ui_tab",
        "name": "Plant status",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "b6795e559d1e41a6",
        "type": "ui_group",
        "name": "Water info",
        "tab": "363a57f6eb311ab9",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "43a5a58f83248d8e",
        "type": "ui_group",
        "name": "Lamp info",
        "tab": "363a57f6eb311ab9",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6d7fed1744c73108",
        "type": "ui_group",
        "name": "Log in form",
        "tab": "6eafc24cd03c3171",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dbbed62931a3f420",
        "type": "ui_tab",
        "name": "Registration",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "47a1019f02139280",
        "type": "ui_group",
        "name": "Registration",
        "tab": "dbbed62931a3f420",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c846bf76c8606a05",
        "type": "ui_group",
        "name": "User option",
        "tab": "363a57f6eb311ab9",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c243bfe85c6ab65f",
        "type": "ui_tab",
        "name": "Plant registration",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "a82a07a6313512b6",
        "type": "ui_group",
        "name": "ask for plant info",
        "tab": "c243bfe85c6ab65f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7878e3a866e9f281",
        "type": "ui_tab",
        "name": "Plant deletion",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "2a8f5bc0a956d188",
        "type": "ui_group",
        "name": "form",
        "tab": "7878e3a866e9f281",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8fda65c920cfe174",
        "type": "ui_group",
        "name": "Auto-manual",
        "tab": "363a57f6eb311ab9",
        "order": 5,
        "disp": true,
        "width": 5,
        "collapse": true,
        "className": ""
    },
    {
        "id": "a016faa19b5c5a46",
        "type": "ui_spacer",
        "z": "785f53d943d8482e",
        "name": "spacer",
        "group": "a82a07a6313512b6",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "4c5a3a7217d2da98",
        "type": "ui_spacer",
        "z": "785f53d943d8482e",
        "name": "spacer",
        "group": "2a8f5bc0a956d188",
        "order": 2,
        "width": "6",
        "height": "1"
    },
    {
        "id": "b13c842165b97de9",
        "type": "ui_group",
        "name": "Plant statistics",
        "tab": "363a57f6eb311ab9",
        "order": 6,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "baf09a28b04468c4",
        "type": "ui_spacer",
        "z": "075376242320f0ef",
        "name": "spacer",
        "group": "6d7fed1744c73108",
        "order": 2,
        "width": "6",
        "height": "1"
    },
    {
        "id": "c71a0fe4ab6c453c",
        "type": "ui_spacer",
        "z": "075376242320f0ef",
        "name": "spacer",
        "group": "6d7fed1744c73108",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "14995aceccb61ad6",
        "type": "ui_spacer",
        "z": "075376242320f0ef",
        "name": "spacer",
        "group": "6d7fed1744c73108",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "aeafce6b4e9ec549",
        "type": "ui_spacer",
        "z": "7345f09d639edea5",
        "name": "spacer",
        "group": "c846bf76c8606a05",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "356edb0dd6cf1668",
        "type": "ui_spacer",
        "z": "7345f09d639edea5",
        "name": "spacer",
        "group": "c846bf76c8606a05",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "eaea70002a56dc7e",
        "type": "ui_spacer",
        "z": "7345f09d639edea5",
        "name": "spacer",
        "group": "c846bf76c8606a05",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "15047879336d69e8",
        "type": "ui_spacer",
        "z": "7345f09d639edea5",
        "name": "spacer",
        "group": "c846bf76c8606a05",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "436607bbf6ce4db5",
        "type": "ui_spacer",
        "z": "7345f09d639edea5",
        "name": "spacer",
        "group": "b6795e559d1e41a6",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "c076c30eca2e5e81",
        "type": "ui_spacer",
        "z": "7345f09d639edea5",
        "name": "spacer",
        "group": "b6795e559d1e41a6",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "999ed706a2492d4c",
        "type": "ui_spacer",
        "z": "7345f09d639edea5",
        "name": "spacer",
        "group": "43a5a58f83248d8e",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "447325302188575a",
        "type": "ui_spacer",
        "z": "7345f09d639edea5",
        "name": "spacer",
        "group": "43a5a58f83248d8e",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "67dee425b78fd237",
        "type": "comment",
        "z": "f857e0827ca4bf08",
        "name": "WARNING: please check you have started this container with a volume that is mounted to /data\\n otherwise any flow changes are lost when you redeploy or upgrade the container\\n (e.g. upgrade to a more recent node-red docker image).\\n  If you are using named volumes you can ignore this warning.\\n Double click or see info side panel to learn how to start Node-RED in Docker to save your work",
        "info": "\nTo start docker with a bind mount volume (-v option), for example:\n\n```\ndocker run -it -p 1880:1880 -v /home/user/node_red_data:/data --name mynodered nodered/node-red\n```\n\nwhere `/home/user/node_red_data` is a directory on your host machine where you want to store your flows.\n\nIf you do not do this then you can experiment and redploy flows, but if you restart or upgrade the container the flows will be disconnected and lost. \n\nThey will still exist in a hidden data volume, which can be recovered using standard docker techniques, but that is much more complex than just starting with a named volume as described above.",
        "x": 350,
        "y": 80,
        "wires": []
    },
    {
        "id": "82d291689bf99c4f",
        "type": "mqtt in",
        "z": "f857e0827ca4bf08",
        "name": "provaMQTT",
        "topic": "Health/band/temperature",
        "qos": "2",
        "datatype": "json",
        "broker": "8957198026b47e18",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 440,
        "wires": [
            [
                "1980eee03f99e119"
            ]
        ]
    },
    {
        "id": "b8960f5841d3fa79",
        "type": "debug",
        "z": "f857e0827ca4bf08",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 340,
        "wires": []
    },
    {
        "id": "9aad5d4234b635ec",
        "type": "http request",
        "z": "f857e0827ca4bf08",
        "name": "req",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:8080/anna",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 350,
        "y": 640,
        "wires": [
            [
                "e6d568d475879aee"
            ]
        ]
    },
    {
        "id": "20a54d4a3c369066",
        "type": "inject",
        "z": "f857e0827ca4bf08",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 640,
        "wires": [
            [
                "9aad5d4234b635ec"
            ]
        ]
    },
    {
        "id": "ccdf5cbf29621a6f",
        "type": "change",
        "z": "f857e0827ca4bf08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "get",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "127.0.0.1:8080/anna",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "e6d568d475879aee",
        "type": "debug",
        "z": "f857e0827ca4bf08",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 640,
        "wires": []
    },
    {
        "id": "cc62838c3791d61a",
        "type": "inject",
        "z": "f857e0827ca4bf08",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "options",
                "v": "[\"Choice 1\",\"Choice 2\",{\"Choice 3\":\"3\"}]",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1220,
        "wires": [
            [
                "45ec146c33f12735"
            ]
        ]
    },
    {
        "id": "6102f1d7aa423b46",
        "type": "function",
        "z": "f857e0827ca4bf08",
        "name": "function 1",
        "func": "// Generate list of elements\nmsg.payload = ['Button 1', 'Button 2', 'Button 3'];\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 860,
        "wires": [
            [
                "48c4f878b548335b"
            ]
        ]
    },
    {
        "id": "3330954dcd4cc23b",
        "type": "split",
        "z": "f857e0827ca4bf08",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 450,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "16df25af42413339",
        "type": "split",
        "z": "f857e0827ca4bf08",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 350,
        "y": 1080,
        "wires": [
            [
                "9de0dd4783285a7b"
            ]
        ]
    },
    {
        "id": "8c9fccbd55ba7391",
        "type": "inject",
        "z": "f857e0827ca4bf08",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"op1\":1,\"op2\":2}",
        "payloadType": "json",
        "x": 160,
        "y": 1080,
        "wires": [
            [
                "16df25af42413339"
            ]
        ]
    },
    {
        "id": "8cccce022f0f945c",
        "type": "http request",
        "z": "f857e0827ca4bf08",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.68.0.24:8080/getUsers",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 270,
        "y": 1340,
        "wires": [
            [
                "1cb1cf9aead3714c"
            ]
        ]
    },
    {
        "id": "4f9b8c96cda187b5",
        "type": "inject",
        "z": "f857e0827ca4bf08",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 1340,
        "wires": [
            [
                "8cccce022f0f945c"
            ]
        ]
    },
    {
        "id": "1cb1cf9aead3714c",
        "type": "debug",
        "z": "f857e0827ca4bf08",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1340,
        "wires": []
    },
    {
        "id": "1980eee03f99e119",
        "type": "python3-function",
        "z": "f857e0827ca4bf08",
        "name": "",
        "func": "import json\ntemp={}\ntemp[\"topic\"]=\"prova\"\ntemp[\"payload\"]=msg[\"payload\"][\"e\"][0][\"v\"]\n\n#p=msg[\"payload\"][\"e\"][0][\"v\"]\nreturn temp",
        "outputs": 1,
        "x": 470,
        "y": 440,
        "wires": [
            [
                "b8960f5841d3fa79",
                "b794fa97e79ad23a"
            ]
        ]
    },
    {
        "id": "457e29492e0a18fe",
        "type": "ui_button",
        "z": "f857e0827ca4bf08",
        "name": "",
        "group": "",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "msg.payload.label",
        "tooltip": "",
        "color": "green",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "msg.payload.payload",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 550,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "9de0dd4783285a7b",
        "type": "ui_button",
        "z": "f857e0827ca4bf08",
        "name": "",
        "group": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "9b41cf6d525a7606",
        "type": "ui_dropdown",
        "z": "f857e0827ca4bf08",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 180,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "45ec146c33f12735",
        "type": "ui_dropdown",
        "z": "f857e0827ca4bf08",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 320,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "b794fa97e79ad23a",
        "type": "ui_chart",
        "z": "f857e0827ca4bf08",
        "name": "",
        "group": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "35",
        "ymax": "40",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 690,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "48c4f878b548335b",
        "type": "ui_template",
        "z": "f857e0827ca4bf08",
        "group": "",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<md-button style=\"display:inline-block\" ng-repeat=\"(key, value) in msg.payload\"\n    ng-click=\"send({payload: value.number})\">{{value.name}}</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 600,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "555508eff9bd9bba",
        "type": "inject",
        "z": "075376242320f0ef",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "options",
                "v": "[ \"Choice 1\", \"Choice 2\", {\"Choice 3\":\"3\"} ]",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "4c8fc453479270a6"
            ]
        ]
    },
    {
        "id": "4c8fc453479270a6",
        "type": "ui_dropdown",
        "z": "075376242320f0ef",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 340,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "47d971684c51b6fc",
        "type": "comment",
        "z": "075376242320f0ef",
        "name": "",
        "info": "Manca da fare la parte dei grafici e da gestire il cambio utente.\nImplementare log in",
        "x": 120,
        "y": 520,
        "wires": []
    },
    {
        "id": "d936ff1999aab9ac",
        "type": "ui_form",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "",
        "label": "Sign in",
        "group": "6d7fed1744c73108",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "user",
                "value": "usr",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "pwd",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "usr": "",
            "pwd": ""
        },
        "payload": "",
        "submit": "Login",
        "cancel": "Cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "a2575c9248f7c543",
                "17d5940c01cd21a1",
                "d648a13e2eaf0ad5"
            ]
        ]
    },
    {
        "id": "ef98da3bc152d665",
        "type": "python3-function",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Access function",
        "func": "#deve vedere se il nome inserito è nella lista utenti\nsubbed_users=msg['payload']\npot_user=msg['user']\npot_user_name=pot_user['usr']\npot_user_pwd=pot_user['pwd']\nresult=0\n\nfor user in subbed_users:\n    username=user['userId']\n    \n    \n    if username==pot_user_name:\n        password=user['password']\n        if password == pot_user_pwd:\n            result=1\n            msg['payload']={'username':pot_user_name,'plants':user['plants']}\n        break\n\n    \nmsg['result']=result\n\n\n\nreturn msg",
        "outputs": 1,
        "x": 820,
        "y": 280,
        "wires": [
            [
                "90d34be1bca09fc8",
                "b9f3ace8daf4efdd"
            ]
        ]
    },
    {
        "id": "d4eaa710b712159f",
        "type": "python3-function",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Register function",
        "func": "\ninformation=msg['payload']\n\nusr=information['usr']\npwd=information['pwd']\ncpwd=information['cpwd']\nspecial_characters = {' ', ':', '/', ';', ',', '\"', \"'\",\"{\",\"}\",\"[\",\"]\"}\nresult=0\nif pwd!=cpwd:\n    result=1 #pwd e cpwd non combaciano\n    msg['payload']=f\"There are password inputs inconsistencies:Please try again\"\nelif any(char in special_characters for char in usr):\n    msg['payload']=f\"user or password cannot contain the following: {special_characters}\"\n    result=2\nelif any(char in special_characters for char in pwd):\n    msg['payload']=f\"user or password cannot contain the following: {special_characters}\"\n    result=2\n\n    \nmsg['result']=result\nif result <1:\n    msg['payload']={'userId':usr,'password':pwd}        \n \n\n\n\n\nreturn msg\n",
        "outputs": 1,
        "x": 270,
        "y": 660,
        "wires": [
            [
                "5432efde2a8d6982"
            ]
        ]
    },
    {
        "id": "a2575c9248f7c543",
        "type": "debug",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Show choice",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 340,
        "wires": []
    },
    {
        "id": "adbf2c75cb48dcfa",
        "type": "http request",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Http req users",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 180,
        "wires": [
            [
                "b3b2fc173a919a27",
                "aeca84dc86ba7212"
            ]
        ]
    },
    {
        "id": "b3b2fc173a919a27",
        "type": "debug",
        "z": "075376242320f0ef",
        "d": true,
        "g": "e1bab6a23adfa149",
        "name": "Show response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 140,
        "wires": []
    },
    {
        "id": "54d3e36a14904d1e",
        "type": "ui_button",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Registartion button",
        "group": "6d7fed1744c73108",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Register",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "4c154482d932806f"
            ]
        ]
    },
    {
        "id": "90d34be1bca09fc8",
        "type": "switch",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Present/notPresent",
        "property": "result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 280,
        "wires": [
            [
                "ab73415461727f6e",
                "69cf99c06dd2b4d0"
            ],
            [
                "2776a6603a21cebb"
            ]
        ]
    },
    {
        "id": "9291dc66265b4327",
        "type": "ui_toast",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "User not found",
        "x": 1560,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "47f3a8ced08ad6a4",
        "type": "http request",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 810,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "17d5940c01cd21a1",
        "type": "change",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f76681518c8fcec5",
        "type": "debug",
        "z": "075376242320f0ef",
        "d": true,
        "g": "e1bab6a23adfa149",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 180,
        "wires": []
    },
    {
        "id": "b9f3ace8daf4efdd",
        "type": "debug",
        "z": "075376242320f0ef",
        "d": true,
        "g": "e1bab6a23adfa149",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "result",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 340,
        "wires": []
    },
    {
        "id": "ab73415461727f6e",
        "type": "change",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "global",
                "to": "user.usr",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "plants",
                "pt": "global",
                "to": "payload.plants",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "user",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "user",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "payload.plants",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "d6305b1fa39c6fd7",
        "type": "ui_toast",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Welcome to Rootypy",
        "x": 1520,
        "y": 180,
        "wires": [
            [
                "45006b35b49531a3"
            ]
        ]
    },
    {
        "id": "69cf99c06dd2b4d0",
        "type": "python3-function",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "User found mess",
        "func": "user=msg['payload']['username']\nmsg['payload']=f\"Welcome to Rootypy {user}\"\nreturn msg",
        "outputs": 1,
        "x": 1290,
        "y": 180,
        "wires": [
            [
                "d6305b1fa39c6fd7"
            ]
        ]
    },
    {
        "id": "2776a6603a21cebb",
        "type": "python3-function",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "User not found mess",
        "func": "msg['payload']=f\"Username or password NOT found:\\nPlease try again\"\nreturn msg\n",
        "outputs": 1,
        "x": 1280,
        "y": 400,
        "wires": [
            [
                "9291dc66265b4327"
            ]
        ]
    },
    {
        "id": "bc64e25371311bc2",
        "type": "ui_text",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "group": "6d7fed1744c73108",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "New to RootyPy?",
        "format": "",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "24",
        "color": "#000000",
        "x": 130,
        "y": 380,
        "wires": []
    },
    {
        "id": "45006b35b49531a3",
        "type": "function",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Change tab to user tab",
        "func": "msg['payload']={'tab': 'Plant status',\n    \"tabs\": {\n        \"hide\": 'Access',\n        \"show\": 'Plant status'\n    }}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 180,
        "wires": [
            [
                "a346b3d266193707"
            ]
        ]
    },
    {
        "id": "a346b3d266193707",
        "type": "ui_ui_control",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "",
        "events": "change",
        "x": 1960,
        "y": 180,
        "wires": [
            [
                "02177c4d978732d7"
            ]
        ]
    },
    {
        "id": "02177c4d978732d7",
        "type": "link out",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "3fc5788391be0480"
        ],
        "x": 2085,
        "y": 180,
        "wires": []
    },
    {
        "id": "4c154482d932806f",
        "type": "python3-function",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Hide login/show register",
        "func": "msg['payload']={'tab': 'Registration',\n    \"tabs\": {\n        \"hide\": 'Access',\n        \"show\": 'Registration'\n    }}\nreturn msg;\n",
        "outputs": 1,
        "x": 370,
        "y": 560,
        "wires": [
            [
                "e915590860d77cce"
            ]
        ]
    },
    {
        "id": "54bd0ef8acc9e736",
        "type": "ui_form",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "",
        "label": "",
        "group": "47a1019f02139280",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "username",
                "value": "usr",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "pwd",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "confirm password",
                "value": "cpwd",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "usr": "",
            "pwd": "",
            "cpwd": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 90,
        "y": 660,
        "wires": [
            [
                "d4eaa710b712159f"
            ]
        ]
    },
    {
        "id": "e915590860d77cce",
        "type": "ui_ui_control",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "",
        "events": "all",
        "x": 580,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "1b4165490c40c1d6",
        "type": "ui_text",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "group": "47a1019f02139280",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Instruction reg",
        "label": "Please fill the required fields",
        "format": "",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 120,
        "y": 780,
        "wires": []
    },
    {
        "id": "5432efde2a8d6982",
        "type": "switch",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "",
        "property": "result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 660,
        "wires": [
            [
                "8159290f41537664"
            ],
            [
                "df58c5bceb4421cd"
            ],
            [
                "59d92917eea4e404"
            ]
        ]
    },
    {
        "id": "8159290f41537664",
        "type": "ui_toast",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Pwd inconsistencies",
        "x": 660,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "3688461ce0b4fb80",
        "type": "python3-function",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Request subscription",
        "func": "username=msg['payload']['userId']\npassword=msg['payload']['password']\nmsg['url']=msg['url']+'/addu'\nmsg['payload']={ 'userId': username, 'password': password,\"chatID\":None}\nreturn msg\n",
        "outputs": 1,
        "x": 840,
        "y": 700,
        "wires": [
            [
                "3c55c5bf32045f5c"
            ]
        ]
    },
    {
        "id": "df58c5bceb4421cd",
        "type": "ui_toast",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "User taken",
        "x": 630,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "3c55c5bf32045f5c",
        "type": "http request",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "addUser",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1040,
        "y": 700,
        "wires": [
            [
                "b325a033e170665d",
                "9b79f9b27d5eae08"
            ]
        ]
    },
    {
        "id": "b325a033e170665d",
        "type": "debug",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 780,
        "wires": []
    },
    {
        "id": "52760fe5192a6b17",
        "type": "ui_toast",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Completed registration",
        "x": 1780,
        "y": 660,
        "wires": [
            [
                "a9e0ba359818474c"
            ]
        ]
    },
    {
        "id": "1a89b1fd344d79eb",
        "type": "python3-function",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Mess complete registration",
        "func": "msg['payload']=f\"Registration complete\"\nreturn msg\n",
        "outputs": 1,
        "x": 1520,
        "y": 660,
        "wires": [
            [
                "52760fe5192a6b17"
            ]
        ]
    },
    {
        "id": "9b79f9b27d5eae08",
        "type": "switch",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Response add user",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1270,
        "y": 700,
        "wires": [
            [
                "1a89b1fd344d79eb"
            ],
            [
                "66553be4a0784414"
            ]
        ]
    },
    {
        "id": "a9e0ba359818474c",
        "type": "function",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Change tab to user tab",
        "func": "msg['payload']={'tab': 'Access',\n    \"tabs\": {\n        \"hide\": 'Registration',\n        \"show\": 'Access'\n    }}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 660,
        "wires": [
            [
                "b6a70f63c6a2d291"
            ]
        ]
    },
    {
        "id": "b6a70f63c6a2d291",
        "type": "ui_ui_control",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "",
        "events": "all",
        "x": 2240,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "66553be4a0784414",
        "type": "python3-function",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Mess user name already present",
        "func": "msg['payload']=f\"Username was already taken. Please try with a different name\"\nreturn msg\n",
        "outputs": 1,
        "x": 1540,
        "y": 740,
        "wires": [
            [
                "c987c8111d037a82"
            ]
        ]
    },
    {
        "id": "c987c8111d037a82",
        "type": "ui_toast",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "User already taken",
        "x": 1810,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "aeca84dc86ba7212",
        "type": "function",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Fetch current user",
        "func": "msg.user = flow.get(\"user\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 220,
        "wires": [
            [
                "ef98da3bc152d665",
                "f76681518c8fcec5"
            ]
        ]
    },
    {
        "id": "05968cffd6eb55d0",
        "type": "ui_button",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "",
        "group": "47a1019f02139280",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 740,
        "wires": [
            [
                "43302dd10b5655e7"
            ]
        ]
    },
    {
        "id": "43302dd10b5655e7",
        "type": "python3-function",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Exit page",
        "func": "msg['payload']={'tab': 'Access',\n    \"tabs\": {\n        \"hide\": 'Registration',\n        \"show\": 'Access'\n    }}\nreturn msg;",
        "outputs": 1,
        "x": 260,
        "y": 740,
        "wires": [
            [
                "46b5902210627630"
            ]
        ]
    },
    {
        "id": "46b5902210627630",
        "type": "ui_ui_control",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Return to log in",
        "events": "change",
        "x": 440,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "d648a13e2eaf0ad5",
        "type": "change",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "settings.settings.url_registry",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 180,
        "wires": [
            [
                "3d34fe96cb41e340"
            ]
        ]
    },
    {
        "id": "3d34fe96cb41e340",
        "type": "python3-function",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "Req users",
        "func": "msg['url']=msg['url']+'/users'\nreturn msg",
        "outputs": 1,
        "x": 410,
        "y": 180,
        "wires": [
            [
                "adbf2c75cb48dcfa"
            ]
        ]
    },
    {
        "id": "59d92917eea4e404",
        "type": "change",
        "z": "075376242320f0ef",
        "g": "e1bab6a23adfa149",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "settings.settings.url_registry",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 700,
        "wires": [
            [
                "3688461ce0b4fb80",
                "b325a033e170665d"
            ]
        ]
    },
    {
        "id": "dd1abb12a0609abc",
        "type": "http request",
        "z": "785f53d943d8482e",
        "name": "Http req plant tank lvl",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3020,
        "y": 500,
        "wires": [
            [
                "b6ea2a17d15cfe59",
                "293ae8816bae389e"
            ]
        ]
    },
    {
        "id": "a6f7dab877c8d216",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "name": "Show first",
        "func": "import json\n\noption=msg['options']\nuser=msg['user']\nif len(option)>0:\n    first_option=option[0]\n    msg['text']=first_option\n    #for measurament in possMeasures:\n    #richiedo l'umidità per ora\n    msg['choice']=first_option\n    #msg['url']=f\"http://192.68.0.25:8080/getData/{user}/{first_option}?measurament=humidity&duration=1\"\nelse:\n    msg['choice']=\"\"\nreturn msg\n",
        "outputs": 1,
        "x": 820,
        "y": 360,
        "wires": [
            [
                "5813fc16fe9cb96e",
                "c8eea8aa3cf00822"
            ]
        ]
    },
    {
        "id": "908a782865cce0a7",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "name": "Choice manager",
        "func": "import json\nchoice=msg['payload']\nmsg['text']=choice\nmsg['choice']=choice\nreturn msg",
        "outputs": 1,
        "x": 1020,
        "y": 300,
        "wires": [
            [
                "5813fc16fe9cb96e",
                "c8eea8aa3cf00822"
            ]
        ]
    },
    {
        "id": "b6ea2a17d15cfe59",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "name": "Read tanklvl",
        "func": "msg['payload']=15\nreturn msg",
        "outputs": 1,
        "x": 3250,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "d8c72c05911f0862",
        "type": "ui_dropdown",
        "z": "785f53d943d8482e",
        "name": "",
        "label": "Plant list",
        "tooltip": "",
        "place": "Select plant",
        "group": "c846bf76c8606a05",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 820,
        "y": 300,
        "wires": [
            [
                "908a782865cce0a7"
            ]
        ]
    },
    {
        "id": "d23807615a804936",
        "type": "ui_text",
        "z": "785f53d943d8482e",
        "group": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Welcome ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 420,
        "y": 100,
        "wires": []
    },
    {
        "id": "9250c5e5ac7e3051",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "name": "Read users plants",
        "func": "\nuser = msg.get('user')\nplants = msg.get(\"payload\", [])\n\n\nmsg['options'] = []\nmsg['plants'] = []\nmsg['noPlants']=0\n\nfor plant in plants:\n\n    if 'userId' in plant and 'plantId' in plant and 'plantCode' in plant:\n        # Extract the ID and CODE from the plant dictionary\n        ID = plant['plantId']\n        CODE = plant['plantCode']\n        \n        \n        if plant['userId'] == user:\n            msg['options'].append(ID)\n            msg['plants'].append(plant)\nif len(msg['plants'])==0:\n    msg['noPlants']=1\n\nreturn msg\n\n    \n",
        "outputs": 1,
        "x": 490,
        "y": 260,
        "wires": [
            [
                "5c84c44701bb62c5",
                "2e1aed2981aeef32"
            ]
        ]
    },
    {
        "id": "9f0ce9f9a58de20d",
        "type": "debug",
        "z": "785f53d943d8482e",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 100,
        "wires": []
    },
    {
        "id": "293ae8816bae389e",
        "type": "debug",
        "z": "785f53d943d8482e",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3260,
        "y": 440,
        "wires": []
    },
    {
        "id": "5813fc16fe9cb96e",
        "type": "ui_text",
        "z": "785f53d943d8482e",
        "group": "c846bf76c8606a05",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Showing:",
        "format": "{{msg.text}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1280,
        "y": 360,
        "wires": []
    },
    {
        "id": "059ba424cf1be431",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "g": "b02abf6bf192d627",
        "name": "Url measure humidity",
        "func": "possMeasures=msg['possMeasures']\nuser=msg['user']\nchoice=msg['choice']\nmsg['url']=f\"http://192.68.0.25:8080/getData/{user}/{choice}?measurament={possMeasures[0]}&duration=1\"\nreturn msg",
        "outputs": 1,
        "x": 3320,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "3f5c726028251213",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "g": "b02abf6bf192d627",
        "name": "Url measure  \"tankLvl\"",
        "func": "\nuser=msg['user']\nchoice=msg['choice']\nmeasure= \"tankLvl\"\nmsg['url']=f\"http://192.68.0.25:8080/getData/{user}/{choice}?measurament={measure}&duration=1\"\nreturn msg\n",
        "outputs": 1,
        "x": 3320,
        "y": 360,
        "wires": [
            [
                "dd1abb12a0609abc"
            ]
        ]
    },
    {
        "id": "3703f643425bb130",
        "type": "function",
        "z": "785f53d943d8482e",
        "name": "UserFetcher",
        "func": "msg.user = global.get(\"user\");\n//msg.plants=global.get(\"plants\")\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            [
                "e51ba9d7d72048d2",
                "9250c5e5ac7e3051"
            ]
        ]
    },
    {
        "id": "fe158eb9f7842053",
        "type": "function",
        "z": "785f53d943d8482e",
        "g": "b02abf6bf192d627",
        "name": "PossMeasureFetcher",
        "func": "msg.possMeasures = global.get(\"possMeasures\");\nmsg.user = msg.user\nmsg.choice=msg.choice\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3080,
        "y": 300,
        "wires": [
            [
                "059ba424cf1be431",
                "3f5c726028251213"
            ]
        ]
    },
    {
        "id": "dcc1f4b1a394506d",
        "type": "comment",
        "z": "785f53d943d8482e",
        "g": "b02abf6bf192d627",
        "name": "",
        "info": "Qua in realtà dovrei richiedere il tank level\ne il light intensity, ma per ora chiedo\nhumidità e temperature per semplicità",
        "x": 3100,
        "y": 240,
        "wires": []
    },
    {
        "id": "c8eea8aa3cf00822",
        "type": "function",
        "z": "785f53d943d8482e",
        "name": "PlantUserFetch",
        "func": "msg.plants = global.get(\"plants\");\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 300,
        "wires": [
            [
                "719c5010aa1cc4c5"
            ]
        ]
    },
    {
        "id": "3fc5788391be0480",
        "type": "link in",
        "z": "785f53d943d8482e",
        "name": "To plant log",
        "links": [
            "02177c4d978732d7",
            "4ceec963bc87e85e",
            "648567d6b13c3f30",
            "1f751990e75adcb1"
        ],
        "x": 45,
        "y": 100,
        "wires": [
            [
                "890463be03cb6168"
            ]
        ]
    },
    {
        "id": "e51ba9d7d72048d2",
        "type": "ui_text",
        "z": "785f53d943d8482e",
        "group": "c846bf76c8606a05",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Display username",
        "label": "User:",
        "format": "{{msg.user}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 490,
        "y": 360,
        "wires": []
    },
    {
        "id": "2e1aed2981aeef32",
        "type": "debug",
        "z": "785f53d943d8482e",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 180,
        "wires": []
    },
    {
        "id": "8951968a0b682fbf",
        "type": "change",
        "z": "785f53d943d8482e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selected_plant",
                "pt": "global",
                "to": "selected_plant",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "settings.settings.url_registry",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 300,
        "wires": [
            [
                "ec8467ddc25d19fa",
                "26303b619ff2969e",
                "26516ead26b4b223"
            ]
        ]
    },
    {
        "id": "ec8467ddc25d19fa",
        "type": "debug",
        "z": "785f53d943d8482e",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1760,
        "y": 80,
        "wires": []
    },
    {
        "id": "24ec5c3c3b135336",
        "type": "ui_button",
        "z": "785f53d943d8482e",
        "g": "fb36f2e94f5d2da4",
        "name": "Esc",
        "group": "c846bf76c8606a05",
        "order": 10,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Log out",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "8e6d26fb2626e146"
            ]
        ]
    },
    {
        "id": "8e6d26fb2626e146",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "g": "fb36f2e94f5d2da4",
        "name": "Exit page",
        "func": "msg['payload']={'tab': 'Access',\n    \"tabs\": {\n        \"hide\": 'Plant status',\n        \"show\": 'Access'\n    }}\nreturn msg;",
        "outputs": 1,
        "x": 300,
        "y": 600,
        "wires": [
            [
                "b01dc798e0c2cf83",
                "aa734ce7f3bbc633"
            ]
        ]
    },
    {
        "id": "b01dc798e0c2cf83",
        "type": "ui_ui_control",
        "z": "785f53d943d8482e",
        "g": "fb36f2e94f5d2da4",
        "name": "Return to log in",
        "events": "change",
        "x": 500,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "aa734ce7f3bbc633",
        "type": "change",
        "z": "785f53d943d8482e",
        "g": "fb36f2e94f5d2da4",
        "name": "Forget current info",
        "rules": [
            {
                "t": "delete",
                "p": "user",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "choice",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "plants",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "online_devices",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "selected_plant",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "697c348d27f644ef",
        "type": "http request",
        "z": "785f53d943d8482e",
        "name": "Give water",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1030,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "ca404d5476496ca4",
        "type": "function",
        "z": "785f53d943d8482e",
        "name": "User&ChoiceFetcher",
        "func": "msg.user = global.get(\"user\");\nmsg.choice = global.get(\"choice\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "4d7fee358a64d414",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "name": "Water response manager",
        "func": "\nreturn msg",
        "outputs": 1,
        "x": 1270,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "df08c75d8b3508cf",
        "type": "switch",
        "z": "785f53d943d8482e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 620,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e7f08119e945da46",
        "type": "ui_button",
        "z": "785f53d943d8482e",
        "g": "fb36f2e94f5d2da4",
        "name": "Add new plant",
        "group": "c846bf76c8606a05",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Add new plant",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 740,
        "wires": [
            [
                "9c7b06964a4ba9d6"
            ]
        ]
    },
    {
        "id": "9c7b06964a4ba9d6",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "g": "fb36f2e94f5d2da4",
        "name": "Go to registration form",
        "func": "msg['payload']={'tab': 'Plant registration',\n    \"tabs\": {\n        \"hide\": 'Plant status',\n        \"show\": 'Plant registration'\n    }\n}\nreturn msg;",
        "outputs": 1,
        "x": 380,
        "y": 740,
        "wires": [
            [
                "64d2492b119c63ea"
            ]
        ]
    },
    {
        "id": "64d2492b119c63ea",
        "type": "ui_ui_control",
        "z": "785f53d943d8482e",
        "g": "fb36f2e94f5d2da4",
        "name": "",
        "events": "change",
        "x": 580,
        "y": 740,
        "wires": [
            [
                "a841450211115ca7"
            ]
        ]
    },
    {
        "id": "f3d07133f7eda261",
        "type": "ui_button",
        "z": "785f53d943d8482e",
        "g": "fb36f2e94f5d2da4",
        "name": "Delete plant",
        "group": "c846bf76c8606a05",
        "order": 6,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Delete plant",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "2772fb529fcf83ab"
            ]
        ]
    },
    {
        "id": "2772fb529fcf83ab",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "g": "fb36f2e94f5d2da4",
        "name": "Go to registration form",
        "func": "msg['payload']={'tab': 'Plant deletion',\n    \"tabs\": {\n        \"hide\": 'Plant status',\n        \"show\": 'Plant deletion'\n    }\n}\nreturn msg;",
        "outputs": 1,
        "x": 360,
        "y": 800,
        "wires": [
            [
                "4ada2e0b45349fc7"
            ]
        ]
    },
    {
        "id": "4ada2e0b45349fc7",
        "type": "ui_ui_control",
        "z": "785f53d943d8482e",
        "g": "fb36f2e94f5d2da4",
        "name": "",
        "events": "change",
        "x": 580,
        "y": 800,
        "wires": [
            [
                "e73397e7a65b2d9c"
            ]
        ]
    },
    {
        "id": "e73397e7a65b2d9c",
        "type": "link out",
        "z": "785f53d943d8482e",
        "g": "fb36f2e94f5d2da4",
        "name": "Deletion button",
        "mode": "link",
        "links": [
            "76a9b599909d3fc8"
        ],
        "x": 695,
        "y": 800,
        "wires": []
    },
    {
        "id": "516632a2a2b54cbe",
        "type": "http request",
        "z": "785f53d943d8482e",
        "name": "Req plants",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 130,
        "y": 260,
        "wires": [
            [
                "3703f643425bb130"
            ]
        ]
    },
    {
        "id": "80ecaf75183b5b7e",
        "type": "change",
        "z": "785f53d943d8482e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "plants",
                "pt": "global",
                "to": "plants",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "noPlants",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "719c5010aa1cc4c5",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "name": "Retrive selected plant info",
        "func": "choice=msg['choice']\nplants=msg['plants']\n\nfor plant in plants:\n    if plant['plantId']==choice:\n        msg['selected_plant']=plant\nreturn msg",
        "outputs": 1,
        "x": 1490,
        "y": 300,
        "wires": [
            [
                "8951968a0b682fbf"
            ]
        ]
    },
    {
        "id": "5e3ae2132d1e778b",
        "type": "link out",
        "z": "785f53d943d8482e",
        "name": "Selecting plant",
        "mode": "link",
        "links": [
            "73f712efb876a113",
            "891cae89d11131cb",
            "8fb57b83c5e956ab"
        ],
        "x": 2595,
        "y": 460,
        "wires": []
    },
    {
        "id": "c35503890140b023",
        "type": "http request",
        "z": "785f53d943d8482e",
        "name": "Req online devices",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1710,
        "y": 460,
        "wires": [
            [
                "d92f8c29ead70dec",
                "8d64052a2d1721b5"
            ]
        ]
    },
    {
        "id": "a2ee4081a04ec4f2",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "name": "Find current plant devices",
        "func": "online_dev=msg.get('payload')\nsel_plant=msg.get('selected_plant')\ncurrent_plant_online_dev=[]\nfor dev in online_dev:\n    plant_code,dev_type = dev['deviceID'].split('/')\n    if plant_code==sel_plant['plantCode']:\n        current_plant_online_dev.append(dev_type)\n\n\nmsg[\"current_plant_online_dev\"]=current_plant_online_dev\nreturn msg",
        "outputs": 1,
        "x": 2170,
        "y": 460,
        "wires": [
            [
                "8ffbf027e5224c14"
            ]
        ]
    },
    {
        "id": "d92f8c29ead70dec",
        "type": "change",
        "z": "785f53d943d8482e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selected_plant",
                "pt": "msg",
                "to": "selected_plant",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 460,
        "wires": [
            [
                "a2ee4081a04ec4f2"
            ]
        ]
    },
    {
        "id": "8ffbf027e5224c14",
        "type": "change",
        "z": "785f53d943d8482e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "online_devices",
                "pt": "global",
                "to": "current_plant_online_dev",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2430,
        "y": 460,
        "wires": [
            [
                "5e3ae2132d1e778b"
            ]
        ]
    },
    {
        "id": "890463be03cb6168",
        "type": "change",
        "z": "785f53d943d8482e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "settings.settings.url_registry",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 100,
        "wires": [
            [
                "b960cd3fce75fc43"
            ]
        ]
    },
    {
        "id": "b960cd3fce75fc43",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "name": "req plants",
        "func": "msg['url']=msg['url']+\"/plants\"\nreturn msg",
        "outputs": 1,
        "x": 120,
        "y": 180,
        "wires": [
            [
                "516632a2a2b54cbe"
            ]
        ]
    },
    {
        "id": "8d64052a2d1721b5",
        "type": "debug",
        "z": "785f53d943d8482e",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1920,
        "y": 540,
        "wires": []
    },
    {
        "id": "a841450211115ca7",
        "type": "link out",
        "z": "785f53d943d8482e",
        "g": "fb36f2e94f5d2da4",
        "name": "From add new plant button",
        "mode": "link",
        "links": [
            "39a9451eda1333c1"
        ],
        "x": 695,
        "y": 740,
        "wires": []
    },
    {
        "id": "26303b619ff2969e",
        "type": "python3-function",
        "z": "785f53d943d8482e",
        "name": "url for devices",
        "func": "msg['url']=msg['url']+\"/devices\"\nreturn msg;\nreturn msg",
        "outputs": 1,
        "x": 1520,
        "y": 460,
        "wires": [
            [
                "c35503890140b023"
            ]
        ]
    },
    {
        "id": "26516ead26b4b223",
        "type": "link out",
        "z": "785f53d943d8482e",
        "name": "From selected plant",
        "mode": "link",
        "links": [
            "fb1f65509cefabf3"
        ],
        "x": 1935,
        "y": 300,
        "wires": []
    },
    {
        "id": "5c84c44701bb62c5",
        "type": "switch",
        "z": "785f53d943d8482e",
        "name": "",
        "property": "noPlants",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 260,
        "wires": [
            [],
            [
                "80ecaf75183b5b7e",
                "d8c72c05911f0862",
                "a6f7dab877c8d216"
            ]
        ]
    },
    {
        "id": "205746116f4c2e47",
        "type": "ui_text_input",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "",
        "label": "Plant code:",
        "tooltip": "Insert the code on the vase (ex. AA000)",
        "group": "a82a07a6313512b6",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "code",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1090,
        "y": 360,
        "wires": [
            [
                "dd6200c65eacd514"
            ]
        ]
    },
    {
        "id": "d2997b320dbc147d",
        "type": "ui_dropdown",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "",
        "label": "Select plant type from list",
        "tooltip": "Select the category that better reflect your plant",
        "place": "Select plant type from list",
        "group": "a82a07a6313512b6",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "881f8f2d6597c088"
            ]
        ]
    },
    {
        "id": "a8923480b36f5932",
        "type": "ui_text_input",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "",
        "label": "Plant name:",
        "tooltip": "Can't contain the following ' ', ':', '/', ';', ',', '\"', \"'\", \"{\", \"}\", \"[\", \"]\"",
        "group": "a82a07a6313512b6",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "plantId",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1090,
        "y": 440,
        "wires": [
            [
                "b5f8d6462425d98d"
            ]
        ]
    },
    {
        "id": "aee5b849fa4bfac7",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "Set plant info",
        "func": "#msg['payload']={\n#    \"code\": msg[\"code\"],\n#    \"plantId\": msg[\"new_plantId\"],\n#    \"plant_type\": msg[\"plant_type\"]\n#};\n#plants_list=msg['plant_list']\n#new_plant=msg['new_plantId']\n#result=0\n#if new_plant and msg['code'] and msg['plant_type']:\n#    for plant in plants_list:\n#        if plant['plantId']==new_plant:\n#            result=1\n#            msg['payload']=\"The chosen plant id is alredy registered in your plant list\"\n#            break\n#else:\n#    result=2\n            \n#if result==0:\nmsg['payload']={'userId':msg['user'],'plantId':msg[\"new_plantId\"],\"plantCode\":msg[\"code\"],\"type\":msg[\"plant_type\"]}\n    \n#msg['result']=result\nreturn msg",
        "outputs": 1,
        "x": 870,
        "y": 480,
        "wires": [
            [
                "2f3bc360bc7fb70a"
            ]
        ]
    },
    {
        "id": "dd6200c65eacd514",
        "type": "change",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "code",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "b5f8d6462425d98d",
        "type": "change",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "new_plantId",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "881f8f2d6597c088",
        "type": "change",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "plant_type",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c95bca5680e5e288",
        "type": "function",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "Fetch new plant info",
        "func": "msg.user = global.get(\"user\")\nmsg.new_plantId=flow.get(\"new_plantId\")\nmsg.code=flow.get(\"code\")\nmsg.plant_type = flow.get(\"plant_type\")\n//msg.plant_list=global.get(\"plants\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 480,
        "wires": [
            [
                "d20fab234f28a810"
            ]
        ]
    },
    {
        "id": "ddd5fbd4061ad912",
        "type": "ui_button",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "Submit button",
        "group": "a82a07a6313512b6",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Submit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 480,
        "wires": [
            [
                "c95bca5680e5e288"
            ]
        ]
    },
    {
        "id": "2f3bc360bc7fb70a",
        "type": "http request",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "Add plant",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.68.0.24:8081/addp",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1060,
        "y": 500,
        "wires": [
            [
                "aac34bcadb7ff94d"
            ]
        ]
    },
    {
        "id": "4b6db7c16dc843c8",
        "type": "switch",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "",
        "property": "result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 500,
        "wires": [
            [
                "5b3afc0e1e29be08"
            ],
            [
                "c36357bdb5531f78"
            ]
        ]
    },
    {
        "id": "5b3afc0e1e29be08",
        "type": "ui_toast",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Succesful add",
        "x": 1560,
        "y": 460,
        "wires": [
            [
                "725d4a493984679c",
                "e8a626f925e2d1b4"
            ]
        ]
    },
    {
        "id": "c36357bdb5531f78",
        "type": "ui_toast",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "failed",
        "x": 1530,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "aac34bcadb7ff94d",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "Plant sub res",
        "func": "response=msg['payload']\nsub_status=response['status']\n\nif sub_status == \"OK\":\n    result=1\n    msg['payload']=\"Plant was added to list\"\n    \nelse:\n    result=0\n    msg['payload']=\"Could not add plant to list. Try again\"\nmsg['result']=result\nreturn msg",
        "outputs": 1,
        "x": 1230,
        "y": 500,
        "wires": [
            [
                "4b6db7c16dc843c8"
            ]
        ]
    },
    {
        "id": "68126b66041a1b9f",
        "type": "change",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "Forget current info",
        "rules": [
            {
                "t": "delete",
                "p": "code",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "new_plantId",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "e8a626f925e2d1b4",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "Exit page",
        "func": "msg['payload']={'tab': 'Plant status',\n    \"tabs\": {\n        \"hide\": 'Plant registration',\n        \"show\": 'Plant status'\n    }}\nreturn msg;",
        "outputs": 1,
        "x": 1780,
        "y": 480,
        "wires": [
            [
                "68126b66041a1b9f",
                "3ae00d22074667a5"
            ]
        ]
    },
    {
        "id": "3ae00d22074667a5",
        "type": "ui_ui_control",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "Return to log in",
        "events": "change",
        "x": 2000,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "f72fae14d274ddfc",
        "type": "ui_toast",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Error message",
        "x": 860,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "9b853bd5ed23df61",
        "type": "ui_button",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "",
        "group": "a82a07a6313512b6",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Back",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 660,
        "wires": [
            [
                "e63f7e3449184563"
            ]
        ]
    },
    {
        "id": "e63f7e3449184563",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "Go to plant status",
        "func": "msg['payload']={'tab': 'Plant status',\n    \"tabs\": {\n        \"hide\": 'Plant registration',\n        \"show\": 'Plant status'\n    }\n}\nreturn msg;",
        "outputs": 1,
        "x": 270,
        "y": 660,
        "wires": [
            [
                "b4ef7ff50fe64395"
            ]
        ]
    },
    {
        "id": "b4ef7ff50fe64395",
        "type": "ui_ui_control",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "",
        "events": "all",
        "x": 460,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "972185aac73aa389",
        "type": "ui_dropdown",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "Choose plant to delete",
        "label": "Select a plant to delete from this list",
        "tooltip": "",
        "place": "Select option",
        "group": "2a8f5bc0a956d188",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 620,
        "y": 840,
        "wires": [
            [
                "baceeb4063def798",
                "33fb36433d73acb5"
            ]
        ]
    },
    {
        "id": "6283ac5c609cf6b8",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "Read users plants",
        "func": "import json\n\nplants=msg.get(\"plants\")\n #palce holder\n#importante dire options se no non capisce\nmsg['options']=[]\nfor plant in plants:\n    msg['options'].append(plant['plantId'])\n    \n\nreturn msg",
        "outputs": 1,
        "x": 390,
        "y": 840,
        "wires": [
            [
                "972185aac73aa389"
            ]
        ]
    },
    {
        "id": "f4f1ac82e233983a",
        "type": "ui_toast",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "First question",
        "x": 1720,
        "y": 840,
        "wires": [
            [
                "08678b0a13896242"
            ]
        ]
    },
    {
        "id": "b60a0b5f8bb62b28",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "1 Dialog delete plant",
        "func": "msg['payload']=\"You have selected a plant to delete. Do you want to continue?\"\nreturn msg",
        "outputs": 1,
        "x": 1480,
        "y": 840,
        "wires": [
            [
                "f4f1ac82e233983a"
            ]
        ]
    },
    {
        "id": "aeedd48828e6154f",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "2 Dialog delete account",
        "func": "msg['payload']=\"This will imply the deletion of your plant infomation in Rootypy. Do you uderstand?\"\nreturn msg",
        "outputs": 1,
        "x": 2110,
        "y": 840,
        "wires": [
            [
                "9e8083a45bdbc457"
            ]
        ]
    },
    {
        "id": "9e8083a45bdbc457",
        "type": "ui_toast",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "I understand",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Last question",
        "x": 2370,
        "y": 840,
        "wires": [
            [
                "d613dabea3643ff2"
            ]
        ]
    },
    {
        "id": "d1f8db1188c99689",
        "type": "http request",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "Req plant deletion",
        "method": "DELETE",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 920,
        "wires": [
            [
                "2923488f1268056b"
            ]
        ]
    },
    {
        "id": "9009d2fc832a6650",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "Produce deletion url",
        "func": "user=msg['user']\nplantCode=msg['plant_to_delete']['plantCode']\nmsg['url']=f\"{msg['url']}/rmp/{user}/{plantCode}\"\nreturn msg",
        "outputs": 1,
        "x": 560,
        "y": 920,
        "wires": [
            [
                "d1f8db1188c99689"
            ]
        ]
    },
    {
        "id": "2923488f1268056b",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "Deletion result",
        "func": "response=msg['payload']\ndeletion_status=response['status']\nif deletion_status == \"OK\":\n    result=1\n    msg['payload']=\"Plant deletion was successful\"\n    \nelse:\n    result=0\n    msg['payload']=\"Deletion refused, please try again\"\nmsg['result']=result\nreturn msg",
        "outputs": 1,
        "x": 1020,
        "y": 920,
        "wires": [
            [
                "4a10853dfb86da80"
            ]
        ]
    },
    {
        "id": "4a10853dfb86da80",
        "type": "switch",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "",
        "property": "result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1190,
        "y": 920,
        "wires": [
            [
                "1061a660338c3c8b"
            ],
            [
                "596c6fd6b6363856"
            ]
        ]
    },
    {
        "id": "1061a660338c3c8b",
        "type": "ui_toast",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Succesful deletion",
        "x": 1390,
        "y": 900,
        "wires": [
            [
                "d9427fc637f97056"
            ]
        ]
    },
    {
        "id": "596c6fd6b6363856",
        "type": "ui_toast",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Deletion failed",
        "x": 1380,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "d9427fc637f97056",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "Exit page",
        "func": "msg['payload']={'tab': 'Plant status',\n    \"tabs\": {\n        \"hide\": 'Plant deletion',\n        \"show\": 'Plant status'\n    }}\nreturn msg;",
        "outputs": 1,
        "x": 1580,
        "y": 900,
        "wires": [
            [
                "bf0271361f3611e3",
                "648567d6b13c3f30"
            ]
        ]
    },
    {
        "id": "bf0271361f3611e3",
        "type": "ui_ui_control",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "Return to status",
        "events": "change",
        "x": 1880,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "648567d6b13c3f30",
        "type": "link out",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "3fc5788391be0480"
        ],
        "x": 1735,
        "y": 940,
        "wires": []
    },
    {
        "id": "33fb36433d73acb5",
        "type": "debug",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 800,
        "wires": []
    },
    {
        "id": "e6986e9ff084f672",
        "type": "ui_button",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "",
        "group": "2a8f5bc0a956d188",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 980,
        "wires": [
            [
                "34b2f3e9edb87c0c"
            ]
        ]
    },
    {
        "id": "34b2f3e9edb87c0c",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "Go to plant status",
        "func": "msg['payload']={'tab': 'Plant status',\n    \"tabs\": {\n        \"hide\": 'Plant deletion',\n        \"show\": 'Plant status'\n    }\n}\nreturn msg;",
        "outputs": 1,
        "x": 290,
        "y": 980,
        "wires": [
            [
                "8362bfe5ede10fa6"
            ]
        ]
    },
    {
        "id": "8362bfe5ede10fa6",
        "type": "ui_ui_control",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "",
        "events": "all",
        "x": 480,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "38200b3c9a499f10",
        "type": "ui_button",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "Delete account",
        "group": "c846bf76c8606a05",
        "order": 8,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Delete account",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "6917a559296c136b"
            ]
        ]
    },
    {
        "id": "ba4f1927460ba5d3",
        "type": "ui_toast",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "First question",
        "x": 580,
        "y": 100,
        "wires": [
            [
                "553f26cc2b246d9b"
            ]
        ]
    },
    {
        "id": "6917a559296c136b",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "1 Dialog delete account",
        "func": "msg['payload']=\"You have selected the deletion of the account\\nDo you want to continue?\"\nreturn msg",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            [
                "ba4f1927460ba5d3"
            ]
        ]
    },
    {
        "id": "a4f21654570ffbc1",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "2 Dialog delete account",
        "func": "msg['payload']=\"This will imply the deletion of your infomation in Rootypy.\\nDo you uderstand?\"\nreturn msg",
        "outputs": 1,
        "x": 930,
        "y": 100,
        "wires": [
            [
                "2bb4b8523a447533"
            ]
        ]
    },
    {
        "id": "2bb4b8523a447533",
        "type": "ui_toast",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "I understand",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Last question",
        "x": 1150,
        "y": 100,
        "wires": [
            [
                "9b515e7a7a54c3e7"
            ]
        ]
    },
    {
        "id": "097ea17c93278929",
        "type": "http request",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "Req user deletion",
        "method": "DELETE",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 160,
        "wires": [
            [
                "c7579521f90149a4",
                "a1d56d1552642ef8"
            ]
        ]
    },
    {
        "id": "fd272948bd036f4c",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "Produce deletion url",
        "func": "user=msg['user']\nmsg['url']=f\"{msg['url']}/rmu/{user}\"\nreturn msg",
        "outputs": 1,
        "x": 340,
        "y": 160,
        "wires": [
            [
                "097ea17c93278929"
            ]
        ]
    },
    {
        "id": "c7579521f90149a4",
        "type": "debug",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 220,
        "wires": []
    },
    {
        "id": "a1d56d1552642ef8",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "Deletion result",
        "func": "response=msg['payload']\ndeletion_status=response['status']\nif deletion_status == \"OK\":\n    result=1\n    msg['payload']=\"Account deletion was successful\"\n    \nelse:\n    result=0\n    msg['payload']=\"Deletion refused, please try again\"\nmsg['result']=result\nreturn msg",
        "outputs": 1,
        "x": 760,
        "y": 160,
        "wires": [
            [
                "d00f853f7ce95464"
            ]
        ]
    },
    {
        "id": "d00f853f7ce95464",
        "type": "switch",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "",
        "property": "result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 160,
        "wires": [
            [
                "be7763dc40d34ad8"
            ],
            [
                "05462e3fba4c6eaa"
            ]
        ]
    },
    {
        "id": "be7763dc40d34ad8",
        "type": "ui_toast",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Succesful deletion",
        "x": 1110,
        "y": 160,
        "wires": [
            [
                "bccb1aa841524783"
            ]
        ]
    },
    {
        "id": "bccb1aa841524783",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "Exit page",
        "func": "msg['payload']={'tab': 'Access',\n    \"tabs\": {\n        \"hide\": 'Plant status',\n        \"show\": 'Access'\n    }}\nreturn msg;",
        "outputs": 1,
        "x": 1300,
        "y": 160,
        "wires": [
            [
                "b4c0554f5747405f",
                "0864d2d36012f7a7"
            ]
        ]
    },
    {
        "id": "b4c0554f5747405f",
        "type": "ui_ui_control",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "Return to log in",
        "events": "change",
        "x": 1540,
        "y": 160,
        "wires": [
            [
                "0d083e036d14f5fb"
            ]
        ]
    },
    {
        "id": "0864d2d36012f7a7",
        "type": "change",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "Forget current info",
        "rules": [
            {
                "t": "delete",
                "p": "user",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "choice",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "plants",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "05462e3fba4c6eaa",
        "type": "ui_toast",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Deletion failed",
        "x": 1100,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0d083e036d14f5fb",
        "type": "link out",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "4f8c68064609087b",
            "07c10727c5973eea"
        ],
        "x": 1695,
        "y": 160,
        "wires": []
    },
    {
        "id": "76a9b599909d3fc8",
        "type": "link in",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "Deletion",
        "links": [
            "e73397e7a65b2d9c"
        ],
        "x": 185,
        "y": 800,
        "wires": [
            [
                "2f0cfd438fd87152"
            ]
        ]
    },
    {
        "id": "725d4a493984679c",
        "type": "link out",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "From add plant",
        "mode": "link",
        "links": [],
        "x": 1715,
        "y": 420,
        "wires": []
    },
    {
        "id": "18da918892bddce2",
        "type": "change",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "settings.settings.url_registry",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 920,
        "wires": [
            [
                "9009d2fc832a6650"
            ]
        ]
    },
    {
        "id": "2f0cfd438fd87152",
        "type": "change",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "plants",
                "pt": "msg",
                "to": "plants",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 840,
        "wires": [
            [
                "6283ac5c609cf6b8"
            ]
        ]
    },
    {
        "id": "baceeb4063def798",
        "type": "change",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "plant_to_delete",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "user",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "plants",
                "pt": "msg",
                "to": "plants",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 840,
        "wires": [
            [
                "65ce55230ef0af1a"
            ]
        ]
    },
    {
        "id": "65ce55230ef0af1a",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "Read users plants",
        "func": "import json\nuser=msg['user']\nplants=msg[\"plants\"]\n #palce holder\n#importante dire options se no non capisce\nptd=msg[\"plant_to_delete\"]\nfor plant in plants:\n    if plant['plantId']==ptd:\n        msg[\"plant_to_delete\"]=plant\n        break\n    \n    \n\nreturn msg",
        "outputs": 1,
        "x": 1210,
        "y": 840,
        "wires": [
            [
                "b60a0b5f8bb62b28"
            ]
        ]
    },
    {
        "id": "9b04a441f222c5b5",
        "type": "change",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 400,
        "wires": [
            [
                "a8923480b36f5932",
                "205746116f4c2e47"
            ]
        ]
    },
    {
        "id": "d20fab234f28a810",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "Check validity",
        "func": "import re\n\nspecial_characters = {' ', ':', '/', ';', ',', '\"', \"'\", \"{\", \"}\", \"[\", \"]\"}\nmsg[\"result\"] = 0\n\nrequired_keys = ['code', 'new_plantId', 'plant_type']\nmissing_keys = [key for key in required_keys if key not in msg]\n\nif missing_keys:\n    msg[\"result\"] = 4\n    msg['payload'] = f\"Missing required keys: {', '.join(missing_keys)}\"\nelse:\n    if len(msg['new_plantId']) == 0 or len(msg['plant_type']) == 0 or len(msg['code']) == 0:\n        msg[\"result\"] = 1\n        msg['payload'] = \"All the informations need to be filled\"\n    else:\n        code = msg['code']\n        regex = r'^[A-Z]{2}\\d{3}$'\n        if not re.match(regex, code):\n            msg['payload'] = \"Invalid code format\"\n            msg['result'] = 2\n        elif any(char in special_characters for char in msg['new_plantId']):\n            msg['result'] = 3\n            msg['payload'] = f\"Plant name can't contain {special_characters}\"\n\nreturn msg\n",
        "outputs": 1,
        "x": 540,
        "y": 480,
        "wires": [
            [
                "d52ba22ad87bd43b"
            ]
        ]
    },
    {
        "id": "d52ba22ad87bd43b",
        "type": "switch",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "",
        "property": "result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 480,
        "wires": [
            [
                "aee5b849fa4bfac7",
                "9b04a441f222c5b5"
            ],
            [
                "f72fae14d274ddfc"
            ]
        ]
    },
    {
        "id": "08678b0a13896242",
        "type": "switch",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Cancel",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1910,
        "y": 820,
        "wires": [
            [],
            [
                "aeedd48828e6154f"
            ]
        ]
    },
    {
        "id": "d613dabea3643ff2",
        "type": "switch",
        "z": "d8e05e37459eb50e",
        "g": "fe9e7ffa346a55af",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Cancel",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2550,
        "y": 820,
        "wires": [
            [],
            [
                "18da918892bddce2"
            ]
        ]
    },
    {
        "id": "553f26cc2b246d9b",
        "type": "switch",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Cancel",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 100,
        "wires": [
            [],
            [
                "a4f21654570ffbc1"
            ]
        ]
    },
    {
        "id": "9b515e7a7a54c3e7",
        "type": "switch",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Cancel",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 100,
        "wires": [
            [],
            [
                "53f52b60e7f2d3a4"
            ]
        ]
    },
    {
        "id": "39a9451eda1333c1",
        "type": "link in",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "To plantType selection",
        "links": [
            "a841450211115ca7"
        ],
        "x": 55,
        "y": 300,
        "wires": [
            [
                "fc73b3126d9de4a9"
            ]
        ]
    },
    {
        "id": "fc73b3126d9de4a9",
        "type": "change",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "settings.settings.url_registry",
                "tot": "global"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 300,
        "wires": [
            [
                "ded0127bd1ea067c"
            ]
        ]
    },
    {
        "id": "ded0127bd1ea067c",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "Produce url valid types",
        "func": "msg[\"url\"]=msg[\"url\"]+\"/valid_plant_types\"\nreturn msg",
        "outputs": 1,
        "x": 400,
        "y": 300,
        "wires": [
            [
                "8990fc281601b01d"
            ]
        ]
    },
    {
        "id": "8990fc281601b01d",
        "type": "http request",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "Get valid plant types",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 640,
        "y": 300,
        "wires": [
            [
                "7bab5d2d56cf4653"
            ]
        ]
    },
    {
        "id": "7bab5d2d56cf4653",
        "type": "python3-function",
        "z": "d8e05e37459eb50e",
        "g": "1167eb289c340144",
        "name": "produce types options",
        "func": "types=msg['payload']\nmsg['options']=[]\nfor ptype in types:\n    msg['options'].append(ptype['type'])\nreturn msg",
        "outputs": 1,
        "x": 880,
        "y": 300,
        "wires": [
            [
                "d2997b320dbc147d"
            ]
        ]
    },
    {
        "id": "53f52b60e7f2d3a4",
        "type": "change",
        "z": "d8e05e37459eb50e",
        "g": "ae0aa142fe4b8c55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "user",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "settings.settings.url_registry",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 120,
        "y": 160,
        "wires": [
            [
                "fd272948bd036f4c"
            ]
        ]
    },
    {
        "id": "89d8170855e00a85",
        "type": "http request",
        "z": "420e20ab72977e1d",
        "name": "Req Current light intensity",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2390,
        "y": 220,
        "wires": [
            [
                "f7ad0fe66826f279",
                "86b97cad19a3dc11"
            ]
        ]
    },
    {
        "id": "8c3f811257f65389",
        "type": "ui_gauge",
        "z": "420e20ab72977e1d",
        "name": "Lamp intensity",
        "group": "43a5a58f83248d8e",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Light intensity",
        "label": "% di intensità",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#464805",
            "#e6bf00",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 2940,
        "y": 220,
        "wires": []
    },
    {
        "id": "8fe2c4200c4ff5da",
        "type": "ui_switch",
        "z": "420e20ab72977e1d",
        "name": "",
        "label": "Mode:",
        "tooltip": "manual<=>auto",
        "group": "43a5a58f83248d8e",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "state",
        "topicType": "msg",
        "style": "",
        "onvalue": "auto",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "manual",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 1200,
        "wires": [
            [
                "9ecff4a9bbcab68d"
            ]
        ]
    },
    {
        "id": "7d07b94c9d52c8c8",
        "type": "change",
        "z": "420e20ab72977e1d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "settings",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 220,
        "wires": [
            [
                "bbb81c33a62b65ef",
                "0ded46267b99c174"
            ]
        ]
    },
    {
        "id": "fd649573de19265c",
        "type": "function",
        "z": "420e20ab72977e1d",
        "name": "Fetch online service",
        "func": "msg.services = global.get(\"services_online\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 220,
        "wires": [
            [
                "d484c21cba551e6c"
            ]
        ]
    },
    {
        "id": "5c039fe8af36ffbe",
        "type": "switch",
        "z": "420e20ab72977e1d",
        "name": "Online/offline",
        "property": "status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1790,
        "y": 120,
        "wires": [
            [
                "7c6ae881fba704bc"
            ],
            [
                "d66368692d1dfdcc",
                "c2b08c19b4feb8d4"
            ]
        ]
    },
    {
        "id": "d66368692d1dfdcc",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "Functionality disabler",
        "func": "msg['enabled']=False\nreturn msg",
        "outputs": 1,
        "x": 2000,
        "y": 140,
        "wires": [
            [
                "c8f19854a084e209"
            ]
        ]
    },
    {
        "id": "7c6ae881fba704bc",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "Functionality enabler",
        "func": "msg['enabled']=True\nreturn msg",
        "outputs": 1,
        "x": 2000,
        "y": 100,
        "wires": [
            [
                "c8f19854a084e209"
            ]
        ]
    },
    {
        "id": "8bc8178b9419d9ea",
        "type": "ui_toast",
        "z": "420e20ab72977e1d",
        "d": true,
        "position": "top left",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Offline awareness",
        "x": 1990,
        "y": 220,
        "wires": []
    },
    {
        "id": "d484c21cba551e6c",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "Check if service is online",
        "func": "msg['status']='off'\nfor services in msg['services']:\n    if services['serviceID']==msg['payload']:\n        msg['status']='on'\nreturn msg",
        "outputs": 1,
        "x": 1110,
        "y": 220,
        "wires": [
            [
                "937b152e971d1213",
                "04fc72112481032f"
            ]
        ]
    },
    {
        "id": "65e868964b4006ca",
        "type": "split",
        "z": "420e20ab72977e1d",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 670,
        "y": 220,
        "wires": [
            [
                "fd649573de19265c",
                "951385770f11ac93"
            ]
        ]
    },
    {
        "id": "bbb81c33a62b65ef",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "services",
        "func": "msg['payload']=msg['payload']['settings']['light']['services']\nreturn msg",
        "outputs": 1,
        "x": 500,
        "y": 220,
        "wires": [
            [
                "65e868964b4006ca"
            ]
        ]
    },
    {
        "id": "937b152e971d1213",
        "type": "switch",
        "z": "420e20ab72977e1d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "UV_light_shift",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EnvMonitoring",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 220,
        "wires": [
            [
                "5c039fe8af36ffbe"
            ],
            [
                "e02e69139dc13fcf"
            ]
        ]
    },
    {
        "id": "c2b08c19b4feb8d4",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "d": true,
        "name": "Produce message",
        "func": "msg['payload']=f\"The service: {msg['payload']} is offline\"\nreturn msg",
        "outputs": 1,
        "x": 1770,
        "y": 220,
        "wires": [
            [
                "8bc8178b9419d9ea",
                "8ff20f4f2cfeb559"
            ]
        ]
    },
    {
        "id": "618957895d6d266a",
        "type": "comment",
        "z": "420e20ab72977e1d",
        "d": true,
        "name": "Gestione uv shift",
        "info": "Se non funziona, devo:\n-diabilitare tutta la parte di gestione\ndelle modalità",
        "x": 1540,
        "y": 220,
        "wires": []
    },
    {
        "id": "8272ab9f2f83aa74",
        "type": "ui_text_input",
        "z": "420e20ab72977e1d",
        "name": "new start time",
        "label": "Starting time:",
        "tooltip": "",
        "group": "43a5a58f83248d8e",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "time",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 600,
        "y": 1260,
        "wires": [
            [
                "7bb1cc7570e9db50"
            ]
        ]
    },
    {
        "id": "8d762e03adc6fd2b",
        "type": "ui_text_input",
        "z": "420e20ab72977e1d",
        "name": "new end time",
        "label": "Ending time:",
        "tooltip": "",
        "group": "43a5a58f83248d8e",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "time",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 590,
        "y": 1300,
        "wires": [
            [
                "c808d4da1f3baa46"
            ]
        ]
    },
    {
        "id": "6398c855d8034302",
        "type": "ui_text",
        "z": "420e20ab72977e1d",
        "group": "43a5a58f83248d8e",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "curr mode start",
        "label": "Current start",
        "format": "{{msg.init}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2920,
        "y": 940,
        "wires": []
    },
    {
        "id": "0bae189c167b0ff7",
        "type": "ui_text",
        "z": "420e20ab72977e1d",
        "group": "43a5a58f83248d8e",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "curr mode end ",
        "label": "Current end",
        "format": "{{msg.end}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2920,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e4dd6fe5aea494e0",
        "type": "ui_button",
        "z": "420e20ab72977e1d",
        "name": "submit mode change",
        "group": "43a5a58f83248d8e",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 1540,
        "wires": [
            [
                "92451cd4e5017c9b"
            ]
        ]
    },
    {
        "id": "85dd9d09709aaeac",
        "type": "ui_text",
        "z": "420e20ab72977e1d",
        "group": "43a5a58f83248d8e",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "Current mode",
        "label": "Current mode:",
        "format": "{{msg.state}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2920,
        "y": 880,
        "wires": []
    },
    {
        "id": "7bb1cc7570e9db50",
        "type": "change",
        "z": "420e20ab72977e1d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "start",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "c808d4da1f3baa46",
        "type": "change",
        "z": "420e20ab72977e1d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "end",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "92451cd4e5017c9b",
        "type": "function",
        "z": "420e20ab72977e1d",
        "name": "Fetch auto settings",
        "func": "msg.plant=global.get(\"selected_plant\")\nmsg.start=flow.get(\"start\")\nmsg.end = flow.get(\"end\")\nmsg.state=flow.get('state')\nmsg.intensity=flow.get(\"new_light_int\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1540,
        "wires": [
            [
                "d083bd287d0dd92b",
                "98016c850354edb7"
            ]
        ]
    },
    {
        "id": "c3419924c6639675",
        "type": "ui_slider",
        "z": "420e20ab72977e1d",
        "name": "",
        "label": "Light intensity picker",
        "tooltip": "",
        "group": "43a5a58f83248d8e",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": "5",
        "className": "",
        "x": 620,
        "y": 1360,
        "wires": [
            [
                "77eabf19191bd999"
            ]
        ]
    },
    {
        "id": "77eabf19191bd999",
        "type": "change",
        "z": "420e20ab72977e1d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "new_light_int",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "c8f19854a084e209",
        "type": "link out",
        "z": "420e20ab72977e1d",
        "name": "From UV_light_shift en/dis",
        "mode": "link",
        "links": [
            "e2c4b6bab80d9e92"
        ],
        "x": 2285,
        "y": 100,
        "wires": []
    },
    {
        "id": "e2c4b6bab80d9e92",
        "type": "link in",
        "z": "420e20ab72977e1d",
        "name": "To light mode option",
        "links": [
            "c8f19854a084e209",
            "552859fd47200618",
            "9cd3c975841313ae",
            "739a3e78cb7efcf5",
            "dc3f3f19f9e872e3"
        ],
        "x": 125,
        "y": 1300,
        "wires": [
            [
                "8fe2c4200c4ff5da",
                "e4dd6fe5aea494e0",
                "2843ab6368109d23",
                "e9cecb49144f315a",
                "5a5d0da0b0965eef",
                "5890db760b78aa32"
            ]
        ]
    },
    {
        "id": "12ac50748fb9d90b",
        "type": "link in",
        "z": "420e20ab72977e1d",
        "name": "To online services",
        "links": [
            "f64e64a2ef64c852"
        ],
        "x": 115,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "8ff20f4f2cfeb559",
        "type": "debug",
        "z": "420e20ab72977e1d",
        "d": true,
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2020,
        "y": 260,
        "wires": []
    },
    {
        "id": "951385770f11ac93",
        "type": "debug",
        "z": "420e20ab72977e1d",
        "name": "debug 28",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 120,
        "wires": []
    },
    {
        "id": "e02e69139dc13fcf",
        "type": "switch",
        "z": "420e20ab72977e1d",
        "name": "Online/offline",
        "property": "status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1750,
        "y": 280,
        "wires": [
            [
                "2bb6b6e92af8fb00"
            ],
            [
                "d84ed97169fbd92d"
            ]
        ]
    },
    {
        "id": "d84ed97169fbd92d",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "Functionality disabler",
        "func": "msg['payload']=False\nmsg['enabled']=False\nreturn msg",
        "outputs": 1,
        "x": 1960,
        "y": 340,
        "wires": [
            [
                "a8707c8238696ed9"
            ]
        ]
    },
    {
        "id": "2bb6b6e92af8fb00",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "Functionality enabler",
        "func": "msg['enabled']=True\n\n\nreturn msg",
        "outputs": 1,
        "x": 1960,
        "y": 280,
        "wires": [
            [
                "a8707c8238696ed9"
            ]
        ]
    },
    {
        "id": "a8707c8238696ed9",
        "type": "link out",
        "z": "420e20ab72977e1d",
        "name": "From EnvMonitoring en/dis",
        "mode": "link",
        "links": [
            "bee063f204d9a0e1"
        ],
        "x": 2165,
        "y": 320,
        "wires": []
    },
    {
        "id": "bee063f204d9a0e1",
        "type": "link in",
        "z": "420e20ab72977e1d",
        "name": "To switch",
        "links": [
            "a8707c8238696ed9",
            "2ff204daec3dd4d1",
            "dc3f3f19f9e872e3"
        ],
        "x": 315,
        "y": 1180,
        "wires": [
            [
                "8fe2c4200c4ff5da"
            ]
        ]
    },
    {
        "id": "3a15322846a367db",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "devices",
        "func": "msg['payload']=msg['payload']['settings']['light']['devices']\nreturn msg",
        "outputs": 1,
        "x": 540,
        "y": 620,
        "wires": [
            [
                "95b0407bcdef035f"
            ]
        ]
    },
    {
        "id": "95b0407bcdef035f",
        "type": "split",
        "z": "420e20ab72977e1d",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 620,
        "wires": [
            [
                "9c0169af9c64c8ce"
            ]
        ]
    },
    {
        "id": "9c0169af9c64c8ce",
        "type": "function",
        "z": "420e20ab72977e1d",
        "name": "Fetch online devices",
        "func": "msg.devices = global.get(\"online_devices\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 620,
        "wires": [
            [
                "5f0ed448f1e00344"
            ]
        ]
    },
    {
        "id": "5f0ed448f1e00344",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "Check if device is online",
        "func": "msg['status']='off'\nfor device in msg['devices']:\n    if device==msg['payload']:\n        msg['status']='on'\nreturn msg",
        "outputs": 1,
        "x": 1130,
        "y": 620,
        "wires": [
            [
                "b675b18250d18fc3",
                "e8ca6a583b21a1f5"
            ]
        ]
    },
    {
        "id": "dba3589683b95208",
        "type": "change",
        "z": "420e20ab72977e1d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "settings",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 620,
        "wires": [
            [
                "3a15322846a367db"
            ]
        ]
    },
    {
        "id": "891cae89d11131cb",
        "type": "link in",
        "z": "420e20ab72977e1d",
        "name": "link in 3",
        "links": [
            "5e3ae2132d1e778b"
        ],
        "x": 115,
        "y": 420,
        "wires": [
            [
                "dba3589683b95208",
                "7d07b94c9d52c8c8"
            ]
        ]
    },
    {
        "id": "0f4724dde45136e5",
        "type": "switch",
        "z": "420e20ab72977e1d",
        "name": "Online/offline",
        "property": "status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1530,
        "y": 600,
        "wires": [
            [
                "4fe00fcbfec26d32"
            ],
            [
                "bd3774ef9a0b0d9a"
            ]
        ]
    },
    {
        "id": "bd3774ef9a0b0d9a",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "Functionality disabler",
        "func": "msg['enabled']=False\nreturn msg",
        "outputs": 1,
        "x": 1900,
        "y": 620,
        "wires": [
            [
                "dc3f3f19f9e872e3"
            ]
        ]
    },
    {
        "id": "9ecad4a435eae51c",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "Functionality enabler",
        "func": "userId=msg['selected_plant']['userId']\nplantCode=msg['selected_plant']['plantCode']\nmsg['url']=f\"{msg['url']}/getData/{userId}/{plantCode}?measurament=current_intensity&duration=1\"\nmsg['enabled']=True\nreturn msg",
        "outputs": 1,
        "x": 1980,
        "y": 540,
        "wires": [
            [
                "dc3f3f19f9e872e3",
                "ce163a4082ad3ee3"
            ]
        ]
    },
    {
        "id": "b675b18250d18fc3",
        "type": "switch",
        "z": "420e20ab72977e1d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lampLight",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sunlight",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 620,
        "wires": [
            [
                "0f4724dde45136e5"
            ],
            [
                "ef3977fb462f45ce"
            ]
        ]
    },
    {
        "id": "dc3f3f19f9e872e3",
        "type": "link out",
        "z": "420e20ab72977e1d",
        "name": "From lampLight en/dis",
        "mode": "link",
        "links": [
            "1b8963dbd7cf30e6",
            "bee063f204d9a0e1",
            "e2c4b6bab80d9e92"
        ],
        "x": 2175,
        "y": 560,
        "wires": []
    },
    {
        "id": "ef3977fb462f45ce",
        "type": "switch",
        "z": "420e20ab72977e1d",
        "name": "Online/offline",
        "property": "status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1670,
        "y": 680,
        "wires": [
            [
                "90d588f679728bd7"
            ],
            [
                "6888c2b72e585006"
            ]
        ]
    },
    {
        "id": "6888c2b72e585006",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "Functionality disabler",
        "func": "msg['payload']=False\nmsg['enabled']=False\nreturn msg",
        "outputs": 1,
        "x": 1860,
        "y": 760,
        "wires": [
            [
                "2ff204daec3dd4d1"
            ]
        ]
    },
    {
        "id": "90d588f679728bd7",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "Functionality enabler",
        "func": "msg['enabled']=True\n\n\nreturn msg",
        "outputs": 1,
        "x": 1880,
        "y": 680,
        "wires": [
            [
                "2ff204daec3dd4d1"
            ]
        ]
    },
    {
        "id": "2ff204daec3dd4d1",
        "type": "link out",
        "z": "420e20ab72977e1d",
        "name": "From EnvMonitoring en/dis",
        "mode": "link",
        "links": [
            "bee063f204d9a0e1"
        ],
        "x": 2105,
        "y": 740,
        "wires": []
    },
    {
        "id": "1b8963dbd7cf30e6",
        "type": "link in",
        "z": "420e20ab72977e1d",
        "name": "To light section",
        "links": [
            "dc3f3f19f9e872e3"
        ],
        "x": 2145,
        "y": 400,
        "wires": [
            [
                "89d8170855e00a85",
                "8c3f811257f65389"
            ]
        ]
    },
    {
        "id": "e8ca6a583b21a1f5",
        "type": "debug",
        "z": "420e20ab72977e1d",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 480,
        "wires": []
    },
    {
        "id": "0ded46267b99c174",
        "type": "debug",
        "z": "420e20ab72977e1d",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 100,
        "wires": []
    },
    {
        "id": "5e0a464632b4d942",
        "type": "inject",
        "z": "420e20ab72977e1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "7d07b94c9d52c8c8"
            ]
        ]
    },
    {
        "id": "04fc72112481032f",
        "type": "debug",
        "z": "420e20ab72977e1d",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 140,
        "wires": []
    },
    {
        "id": "2660ea63f92c3cb6",
        "type": "change",
        "z": "420e20ab72977e1d",
        "name": "url adaptor place holder",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "adaptor.route",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 540,
        "wires": [
            [
                "9ecad4a435eae51c"
            ]
        ]
    },
    {
        "id": "ce163a4082ad3ee3",
        "type": "debug",
        "z": "420e20ab72977e1d",
        "name": "out to adaptor req light",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2260,
        "y": 620,
        "wires": []
    },
    {
        "id": "0234b4eab14d6c03",
        "type": "comment",
        "z": "420e20ab72977e1d",
        "name": "Put actual measure",
        "info": "",
        "x": 1930,
        "y": 380,
        "wires": []
    },
    {
        "id": "f7ad0fe66826f279",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "take last intensity mesure",
        "func": "if len(msg['payload'])>0:\n    msg['payload']=msg['payload'][-1][\"v\"]\nelse:\n    msg['payload']=\"Initializing plant...\"\nreturn msg",
        "outputs": 1,
        "x": 2650,
        "y": 220,
        "wires": [
            [
                "8c3f811257f65389"
            ]
        ]
    },
    {
        "id": "4fe00fcbfec26d32",
        "type": "switch",
        "z": "420e20ab72977e1d",
        "name": "look adaptor",
        "property": "adaptor",
        "propertyType": "global",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 540,
        "wires": [
            [
                "2660ea63f92c3cb6"
            ],
            [
                "bd3774ef9a0b0d9a"
            ]
        ]
    },
    {
        "id": "b47b4a9db824169d",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "Show current options",
        "func": "plant=msg['selected_plant']\nmsg['state']=plant['state']\nif plant['state']=='auto':\n    msg[\"init\"]=plant['auto_init']\n    msg[\"end\"]=plant['auto_end']\nelse:\n    msg[\"init\"]=plant['manual_init']\n    msg[\"end\"]=plant['manual_end']\nreturn msg",
        "outputs": 1,
        "x": 2640,
        "y": 900,
        "wires": [
            [
                "85dd9d09709aaeac",
                "6398c855d8034302",
                "0bae189c167b0ff7"
            ]
        ]
    },
    {
        "id": "73f712efb876a113",
        "type": "link in",
        "z": "420e20ab72977e1d",
        "name": "To current light settings",
        "links": [
            "5e3ae2132d1e778b"
        ],
        "x": 2295,
        "y": 900,
        "wires": [
            [
                "b47b4a9db824169d"
            ]
        ]
    },
    {
        "id": "9ecff4a9bbcab68d",
        "type": "change",
        "z": "420e20ab72977e1d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "state",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "4d7b3b1b65b0b588",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "ProduceBody",
        "func": "msg['payload']={\"plantCode\":msg['plant']['plantCode'],\n    'state':msg['state'],\n    'init':msg['start'],\n    'end':msg['end']\n    }\nmsg['url']=msg['url']+\"/updateInterval\"\nreturn msg",
        "outputs": 1,
        "x": 1180,
        "y": 1540,
        "wires": [
            [
                "81642fe28e93f375"
            ]
        ]
    },
    {
        "id": "98016c850354edb7",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "Message mqtt to UV light",
        "func": "if msg['state']==\"auto\":\n    mode='automatic'\nelse:\n    mode='manual'\n\nlamp = { \"bn\": \"None\",\"e\": [\n        {\n            \"n\": \"current_intensity\",\n            \"u\": \"percentage\",\n            \"t\": \"None\",\n            \"v\": msg['intensity']\n        },\n        {\n            \"n\": \"init_hour\",\n            \"u\": \"s\",\n            \"t\": \"None\",\n            \"v\": msg['start']/1000\n        },\n        {\n            \"n\": \"final_hour\",\n            \"u\": \"s\",\n            \"t\": \"None\",\n            \"v\": msg['end']/1000\n        }\n    ]\n}\n\nmsg['payload']=lamp\n    \nmsg['topic']=f\"RootyPy/{msg['plant']['userId']}/{msg['plant']['plantCode']}/lux_to_give/{mode}\"\nreturn msg",
        "outputs": 1,
        "x": 790,
        "y": 1620,
        "wires": [
            [
                "c8254cbb0ab04454",
                "7d03e4cb2097ad99"
            ]
        ]
    },
    {
        "id": "a2c2dd59c6fa85b0",
        "type": "change",
        "z": "420e20ab72977e1d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "settings.settings.url_registry",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 1540,
        "wires": [
            [
                "4d7b3b1b65b0b588"
            ]
        ]
    },
    {
        "id": "81642fe28e93f375",
        "type": "http request",
        "z": "420e20ab72977e1d",
        "name": "Req interval update",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1390,
        "y": 1540,
        "wires": [
            [
                "8e2501885ffcd3bf"
            ]
        ]
    },
    {
        "id": "c8254cbb0ab04454",
        "type": "mqtt out",
        "z": "420e20ab72977e1d",
        "name": "Send to Uv_light_shift",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8957198026b47e18",
        "x": 1100,
        "y": 1620,
        "wires": []
    },
    {
        "id": "d44fc004e3cda8e6",
        "type": "ui_toast",
        "z": "420e20ab72977e1d",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1820,
        "y": 1540,
        "wires": []
    },
    {
        "id": "8e2501885ffcd3bf",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "Message reader",
        "func": "msg['payload']=msg['payload']['message']\nreturn msg",
        "outputs": 1,
        "x": 1600,
        "y": 1540,
        "wires": [
            [
                "d44fc004e3cda8e6",
                "4ceec963bc87e85e"
            ]
        ]
    },
    {
        "id": "86b97cad19a3dc11",
        "type": "debug",
        "z": "420e20ab72977e1d",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2640,
        "y": 160,
        "wires": []
    },
    {
        "id": "d083bd287d0dd92b",
        "type": "python3-function",
        "z": "420e20ab72977e1d",
        "name": "convert from unix",
        "func": "import datetime\n\n# Il timestamp fornito\nstart = msg['start']\nend = msg['end']\n\n# Convertire il timestamp da millisecondi a secondi\nstart = start / 1000\nend = end / 1000\n# Convertire il timestamp in un oggetto datetime\ndate_start = datetime.datetime.utcfromtimestamp(start)\ndate_end = datetime.datetime.utcfromtimestamp(end)\n\n# Estrarre l'ora dall'oggetto datetime\nmsg['start'] = date_start.strftime('%H:%M')\nmsg['end'] = date_end.strftime('%H:%M')\nreturn msg",
        "outputs": 1,
        "x": 710,
        "y": 1540,
        "wires": [
            [
                "a2c2dd59c6fa85b0"
            ]
        ]
    },
    {
        "id": "4ceec963bc87e85e",
        "type": "link out",
        "z": "420e20ab72977e1d",
        "name": "From light settings selection",
        "mode": "link",
        "links": [
            "3fc5788391be0480"
        ],
        "x": 1805,
        "y": 1440,
        "wires": []
    },
    {
        "id": "7d03e4cb2097ad99",
        "type": "debug",
        "z": "420e20ab72977e1d",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 1680,
        "wires": []
    },
    {
        "id": "2843ab6368109d23",
        "type": "change",
        "z": "420e20ab72977e1d",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "start",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1260,
        "wires": [
            [
                "8272ab9f2f83aa74"
            ]
        ]
    },
    {
        "id": "e9cecb49144f315a",
        "type": "change",
        "z": "420e20ab72977e1d",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "end",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1300,
        "wires": [
            [
                "8d762e03adc6fd2b"
            ]
        ]
    },
    {
        "id": "5a5d0da0b0965eef",
        "type": "change",
        "z": "420e20ab72977e1d",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "new_light_int",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1360,
        "wires": [
            [
                "c3419924c6639675"
            ]
        ]
    },
    {
        "id": "5890db760b78aa32",
        "type": "change",
        "z": "420e20ab72977e1d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "manual",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1140,
        "wires": [
            [
                "9ecff4a9bbcab68d"
            ]
        ]
    },
    {
        "id": "3e4002b3c3be1387",
        "type": "http request",
        "z": "7345f09d639edea5",
        "name": "Req Current water volume left",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 630,
        "y": 160,
        "wires": [
            [
                "9eefc2c208f7617b",
                "a7c7800c1b7c9ad0"
            ]
        ]
    },
    {
        "id": "190addbc5ef563a7",
        "type": "ui_gauge",
        "z": "7345f09d639edea5",
        "name": "Tank level",
        "group": "b6795e559d1e41a6",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Tank level",
        "label": "% di intensità",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#edcf07",
            "#00cbe6",
            "#3a65cb"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1300,
        "y": 160,
        "wires": []
    },
    {
        "id": "1f45258a425bb90c",
        "type": "python3-function",
        "z": "7345f09d639edea5",
        "name": "take last tank mesure",
        "func": "if len(msg['payload'])>0:\n    current_level=msg['payload'][-1][\"v\"]\n    \n    model_of_sel_plant=msg['selected_plant'][\"plantCode\"][:2]\n    \n    for model in msg['models']:\n        if model['model_code']==model_of_sel_plant:\n            msg['payload']= round((current_level/model['tank_capacity'])*100)\n            break\n\nelse:\n    msg['payload']=\"Initializing plant...\"\nreturn msg",
        "outputs": 1,
        "x": 1100,
        "y": 160,
        "wires": [
            [
                "190addbc5ef563a7",
                "9714b7cc75f3acdf"
            ]
        ]
    },
    {
        "id": "9eefc2c208f7617b",
        "type": "debug",
        "z": "7345f09d639edea5",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 100,
        "wires": []
    },
    {
        "id": "c8bc0462af4a4e91",
        "type": "ui_button",
        "z": "7345f09d639edea5",
        "name": "submit mode change",
        "group": "b6795e559d1e41a6",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 200,
        "y": 300,
        "wires": [
            [
                "97cb65a5eb34a0ba"
            ]
        ]
    },
    {
        "id": "97cb65a5eb34a0ba",
        "type": "function",
        "z": "7345f09d639edea5",
        "name": "Fetch water settings",
        "func": "msg.selected_plant=global.get(\"selected_plant\")\nmsg.amount = flow.get(\"water_to_give\")\nmsg.models=global.get(\"models\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 300,
        "wires": [
            [
                "bd35fe147c08aef8"
            ]
        ]
    },
    {
        "id": "bd35fe147c08aef8",
        "type": "python3-function",
        "z": "7345f09d639edea5",
        "name": "Message mqtt to water_irrigator",
        "func": "\nmodel_of_sel_plant=msg['selected_plant'][\"plantCode\"][:2]\n    \nfor model in msg['models']:\n    if model['model_code']==model_of_sel_plant:\n        msg['amount']= (msg['amount']*model['tank_capacity'])/100\n        break\n\n\n\n\nirrigation = { \"bn\": \"None\",\"e\": [\n        {\n            \"n\": \"Volume of water\",\n            \"u\": \"l\",\n            \"t\": \"None\",\n            \"v\": msg['amount']\n        }\n]}\nmsg['payload']=irrigation\n\n\n    \nmsg['topic']=f\"RootyPy/{msg['selected_plant']['userId']}/{msg['selected_plant']['plantCode']}/water_to_give/manual\"\nreturn msg",
        "outputs": 1,
        "x": 730,
        "y": 300,
        "wires": [
            [
                "6ce0fe96b098fe45",
                "f29681bf8fa86456",
                "90f966a252672043"
            ]
        ]
    },
    {
        "id": "6ce0fe96b098fe45",
        "type": "mqtt out",
        "z": "7345f09d639edea5",
        "name": "Send to irrigator",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8957198026b47e18",
        "x": 1000,
        "y": 300,
        "wires": []
    },
    {
        "id": "f29681bf8fa86456",
        "type": "debug",
        "z": "7345f09d639edea5",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 360,
        "wires": []
    },
    {
        "id": "892ef1d2a986b2fd",
        "type": "ui_slider",
        "z": "7345f09d639edea5",
        "name": "",
        "label": "% of water picker",
        "tooltip": "",
        "group": "b6795e559d1e41a6",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "1",
        "max": "10",
        "step": "1",
        "className": "",
        "x": 470,
        "y": 240,
        "wires": [
            [
                "8bef213f06840208"
            ]
        ]
    },
    {
        "id": "8bef213f06840208",
        "type": "change",
        "z": "7345f09d639edea5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "water_to_give",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "de95cb77b1af2e50",
        "type": "change",
        "z": "7345f09d639edea5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "water_to_give",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 240,
        "wires": [
            [
                "892ef1d2a986b2fd"
            ]
        ]
    },
    {
        "id": "90f966a252672043",
        "type": "change",
        "z": "7345f09d639edea5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "adaptor.route",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 160,
        "wires": [
            [
                "88b393252f7acb89"
            ]
        ]
    },
    {
        "id": "88b393252f7acb89",
        "type": "python3-function",
        "z": "7345f09d639edea5",
        "name": "Produce url to adaptor",
        "func": "userId=msg['selected_plant']['userId']\nplantCode=msg['selected_plant']['plantCode']\nmsg['url']=f\"{msg['url']}/getData/{userId}/{plantCode}?measurament=tankLevel&duration=1\"\nreturn msg",
        "outputs": 1,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "3e4002b3c3be1387"
            ]
        ]
    },
    {
        "id": "e9be20f99306515c",
        "type": "ui_text",
        "z": "7345f09d639edea5",
        "group": "b6795e559d1e41a6",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "",
        "format": "Give water to plant:",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 230,
        "y": 400,
        "wires": []
    },
    {
        "id": "8fb57b83c5e956ab",
        "type": "link in",
        "z": "7345f09d639edea5",
        "name": "To water settings",
        "links": [
            "5e3ae2132d1e778b"
        ],
        "x": 35,
        "y": 220,
        "wires": [
            [
                "90f966a252672043",
                "de95cb77b1af2e50",
                "c8bc0462af4a4e91"
            ]
        ]
    },
    {
        "id": "bb56506e7de298cc",
        "type": "python3-function",
        "z": "7345f09d639edea5",
        "name": "",
        "func": "\nreturn msg",
        "outputs": 1,
        "x": 1010,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a7c7800c1b7c9ad0",
        "type": "change",
        "z": "7345f09d639edea5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selected_plant",
                "pt": "msg",
                "to": "selected_plant",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "models",
                "pt": "msg",
                "to": "models",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 160,
        "wires": [
            [
                "1f45258a425bb90c"
            ]
        ]
    },
    {
        "id": "9714b7cc75f3acdf",
        "type": "debug",
        "z": "7345f09d639edea5",
        "name": "debug 41",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 200,
        "wires": []
    },
    {
        "id": "1314dcec3ebab8b8",
        "type": "inject",
        "z": "8fa8102ddd6213f9",
        "g": "e6c4aaa3566ad829",
        "name": "Activate registration process",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "25",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "3cdf817095039d1d",
                "b96219db0aeefd29"
            ]
        ]
    },
    {
        "id": "d3116a79dbd26d9f",
        "type": "python3-function",
        "z": "8fa8102ddd6213f9",
        "name": "Take reg_url and connected services",
        "func": "\nreturn msg",
        "outputs": 1,
        "x": 850,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "a1a60e9655d6f741",
        "type": "mqtt out",
        "z": "8fa8102ddd6213f9",
        "g": "e6c4aaa3566ad829",
        "name": "publish alive message",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8957198026b47e18",
        "x": 720,
        "y": 260,
        "wires": []
    },
    {
        "id": "46df1d3d9b00eac4",
        "type": "change",
        "z": "8fa8102ddd6213f9",
        "g": "e6c4aaa3566ad829",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "services_online",
                "pt": "global",
                "to": "services_online",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "adaptor",
                "pt": "global",
                "to": "adaptor",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 380,
        "wires": [
            [
                "f64e64a2ef64c852"
            ]
        ]
    },
    {
        "id": "7724a27acc619f9c",
        "type": "function",
        "z": "8fa8102ddd6213f9",
        "g": "da60ea094f9fae74",
        "name": "Fetch online service",
        "func": "msg.services = global.get(\"services_online\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "b1339271bc549447",
        "type": "switch",
        "z": "8fa8102ddd6213f9",
        "g": "da60ea094f9fae74",
        "name": "Online/offline",
        "property": "status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 700,
        "wires": [
            [
                "ae03fc51560aae3c"
            ],
            [
                "0f3a4304daa4ba5c",
                "497c65e39dd230d8"
            ]
        ]
    },
    {
        "id": "0f3a4304daa4ba5c",
        "type": "python3-function",
        "z": "8fa8102ddd6213f9",
        "g": "da60ea094f9fae74",
        "name": "Functionality disabler",
        "func": "msg['enabled']=False\nreturn msg",
        "outputs": 1,
        "x": 880,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "ae03fc51560aae3c",
        "type": "python3-function",
        "z": "8fa8102ddd6213f9",
        "g": "da60ea094f9fae74",
        "name": "Functionality enabler",
        "func": "msg['enabled']=True\nreturn msg",
        "outputs": 1,
        "x": 880,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "497c65e39dd230d8",
        "type": "ui_toast",
        "z": "8fa8102ddd6213f9",
        "g": "da60ea094f9fae74",
        "position": "top left",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Offline awareness",
        "x": 870,
        "y": 760,
        "wires": []
    },
    {
        "id": "40534a3910705aae",
        "type": "debug",
        "z": "8fa8102ddd6213f9",
        "g": "e6c4aaa3566ad829",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 200,
        "wires": []
    },
    {
        "id": "8b51178bff4916c9",
        "type": "http request",
        "z": "8fa8102ddd6213f9",
        "g": "e6c4aaa3566ad829",
        "name": "Req activated services to registry",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 860,
        "y": 380,
        "wires": [
            [
                "77cc26df612d1f54",
                "d3dd0254ee70784d"
            ]
        ]
    },
    {
        "id": "3cdf817095039d1d",
        "type": "python3-function",
        "z": "8fa8102ddd6213f9",
        "g": "e6c4aaa3566ad829",
        "name": "Registartion payload",
        "func": "\nimport time\nmsg[\"topic\"]=\"RootyPy/node_red\"\nmsg[\"payload\"]={\"bn\":\"updateCatalogService\",\"e\":[{\"n\": \"node_red\", \"t\": time.time(), \"v\":None,\"u\":\"IP\"}]}\nreturn msg",
        "outputs": 1,
        "x": 480,
        "y": 260,
        "wires": [
            [
                "a1a60e9655d6f741",
                "40534a3910705aae"
            ]
        ]
    },
    {
        "id": "f2c2c453fc059f3f",
        "type": "python3-function",
        "z": "8fa8102ddd6213f9",
        "g": "e6c4aaa3566ad829",
        "name": "Ask active services to registry",
        "func": "msg['url']=f\"{msg['url']}/services\"\nreturn msg",
        "outputs": 1,
        "x": 550,
        "y": 380,
        "wires": [
            [
                "8b51178bff4916c9"
            ]
        ]
    },
    {
        "id": "77cc26df612d1f54",
        "type": "debug",
        "z": "8fa8102ddd6213f9",
        "g": "e6c4aaa3566ad829",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 340,
        "wires": []
    },
    {
        "id": "804517212092e655",
        "type": "file in",
        "z": "8fa8102ddd6213f9",
        "name": "Read config",
        "filename": "/data/config.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 140,
        "wires": [
            [
                "0dad8219c7f65389",
                "89f64dd593df2da9"
            ]
        ]
    },
    {
        "id": "f5d2f512b44819a1",
        "type": "inject",
        "z": "8fa8102ddd6213f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "804517212092e655",
                "0dad8219c7f65389"
            ]
        ]
    },
    {
        "id": "469329b326c67540",
        "type": "change",
        "z": "8fa8102ddd6213f9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "settings",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "0dad8219c7f65389",
        "type": "debug",
        "z": "8fa8102ddd6213f9",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 80,
        "wires": []
    },
    {
        "id": "89f64dd593df2da9",
        "type": "json",
        "z": "8fa8102ddd6213f9",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 550,
        "y": 140,
        "wires": [
            [
                "469329b326c67540"
            ]
        ]
    },
    {
        "id": "f64e64a2ef64c852",
        "type": "link out",
        "z": "8fa8102ddd6213f9",
        "g": "e6c4aaa3566ad829",
        "name": "From online check",
        "mode": "link",
        "links": [
            "12ac50748fb9d90b"
        ],
        "x": 1565,
        "y": 380,
        "wires": []
    },
    {
        "id": "d3dd0254ee70784d",
        "type": "python3-function",
        "z": "8fa8102ddd6213f9",
        "g": "e6c4aaa3566ad829",
        "name": "divide services online from adaptor",
        "func": "msg['services_online']=[]\nmsg['adaptor']=[]\nfor service in msg['payload']:\n    if service['serviceID']==\"adaptor\":\n        msg['adaptor']=service\n    else:\n        msg['services_online'].append(service)\nreturn msg",
        "outputs": 1,
        "x": 1180,
        "y": 380,
        "wires": [
            [
                "46df1d3d9b00eac4"
            ]
        ]
    },
    {
        "id": "b96219db0aeefd29",
        "type": "change",
        "z": "8fa8102ddd6213f9",
        "g": "e6c4aaa3566ad829",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "settings.settings.url_registry",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 380,
        "wires": [
            [
                "f2c2c453fc059f3f",
                "b5129cd372d50485"
            ]
        ]
    },
    {
        "id": "b5129cd372d50485",
        "type": "python3-function",
        "z": "8fa8102ddd6213f9",
        "name": "Ask models",
        "func": "msg['url']=f\"{msg['url']}/models\"\nreturn msg",
        "outputs": 1,
        "x": 490,
        "y": 460,
        "wires": [
            [
                "6d4685ccd1907e29"
            ]
        ]
    },
    {
        "id": "6d4685ccd1907e29",
        "type": "http request",
        "z": "8fa8102ddd6213f9",
        "name": "Req models to registry",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 760,
        "y": 460,
        "wires": [
            [
                "8009ee6744d4cd61",
                "8189296a7b778061"
            ]
        ]
    },
    {
        "id": "8009ee6744d4cd61",
        "type": "change",
        "z": "8fa8102ddd6213f9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "models",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "8189296a7b778061",
        "type": "debug",
        "z": "8fa8102ddd6213f9",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 520,
        "wires": []
    },
    {
        "id": "ef054254640742d7",
        "type": "ui_chart",
        "z": "f2b7d1cdce5c4bfe",
        "name": "Last DLI mesurements",
        "group": "b13c842165b97de9",
        "order": 1,
        "width": 10,
        "height": 5,
        "label": "DLI mesurements",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#edfe67",
            "#f2930d",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "208073084ef84f6e",
        "type": "http request",
        "z": "f2b7d1cdce5c4bfe",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 770,
        "y": 360,
        "wires": [
            [
                "45777d880f5576dc",
                "0b53aaab4d536dd5"
            ]
        ]
    },
    {
        "id": "72721b0ff243e437",
        "type": "change",
        "z": "f2b7d1cdce5c4bfe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "adaptor.route",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 360,
        "wires": [
            [
                "4529fd5f59199167"
            ]
        ]
    },
    {
        "id": "4529fd5f59199167",
        "type": "python3-function",
        "z": "f2b7d1cdce5c4bfe",
        "name": "Url for chart",
        "func": "msg['url']=f\"{msg['url']}/getData/{msg['selected_plant']['userId']}/{msg['selected_plant']['plantCode']}?measurament=DLI&duration=24\"\nreturn msg",
        "outputs": 1,
        "x": 590,
        "y": 360,
        "wires": [
            [
                "208073084ef84f6e"
            ]
        ]
    },
    {
        "id": "fb1f65509cefabf3",
        "type": "link in",
        "z": "f2b7d1cdce5c4bfe",
        "name": "To light chart",
        "links": [
            "26516ead26b4b223"
        ],
        "x": 255,
        "y": 360,
        "wires": [
            [
                "72721b0ff243e437"
            ]
        ]
    },
    {
        "id": "45777d880f5576dc",
        "type": "debug",
        "z": "f2b7d1cdce5c4bfe",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 220,
        "wires": []
    },
    {
        "id": "0b53aaab4d536dd5",
        "type": "python3-function",
        "z": "f2b7d1cdce5c4bfe",
        "name": "",
        "func": "\nlabels = []\ndata = []\ncumulative_data = []\ncumulative_sum = 0\nfor measure in msg['payload']:\n    labels.append(measure['t'])\n    data.append(measure['v'])\n    cumulative_sum += measure['v']\n    cumulative_data.append(cumulative_sum)\n\nmsg['payload'] = [{\n    \"series\": [\"DLI per hour\",\"cumulative DLI\"],\n    \"data\": [data,cumulative_data],\n    \"labels\": labels\n}]\nreturn msg\n",
        "outputs": 1,
        "x": 970,
        "y": 380,
        "wires": [
            [
                "ef054254640742d7"
            ]
        ]
    },
    {
        "id": "325e3026faa04e0a",
        "type": "inject",
        "z": "abef47bed1338c6e",
        "name": "Input 1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "value1",
        "payloadType": "str",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "801b9b669188423a"
            ]
        ]
    },
    {
        "id": "c609274e7af8355e",
        "type": "inject",
        "z": "abef47bed1338c6e",
        "name": "Input 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input2",
        "payload": "value2",
        "payloadType": "str",
        "x": 170,
        "y": 190,
        "wires": [
            [
                "801b9b669188423a"
            ]
        ]
    },
    {
        "id": "2a87a1f75b1d0e5d",
        "type": "inject",
        "z": "abef47bed1338c6e",
        "name": "Input 3",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input3",
        "payload": "value3",
        "payloadType": "str",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "801b9b669188423a"
            ]
        ]
    },
    {
        "id": "801b9b669188423a",
        "type": "join",
        "z": "abef47bed1338c6e",
        "name": "Join Inputs",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 370,
        "y": 190,
        "wires": [
            [
                "30fd929e69713b7a"
            ]
        ]
    },
    {
        "id": "30fd929e69713b7a",
        "type": "function",
        "z": "abef47bed1338c6e",
        "name": "Process Combined Message",
        "func": "msg.payload = {\n    input1: msg.payload.input1,\n    input2: msg.payload.input2,\n    input3: msg.payload.input3\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 190,
        "wires": [
            [
                "e9c98a1f2dc48e40"
            ]
        ]
    },
    {
        "id": "e9c98a1f2dc48e40",
        "type": "ui_button",
        "z": "abef47bed1338c6e",
        "name": "Submit Button",
        "group": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Submit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 820,
        "y": 200,
        "wires": [
            [
                "b4c3921cc69d3a44"
            ]
        ]
    },
    {
        "id": "b4c3921cc69d3a44",
        "type": "debug",
        "z": "abef47bed1338c6e",
        "name": "Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 970,
        "y": 190,
        "wires": []
    },
    {
        "id": "fb1c58f2a3fe45be",
        "type": "ui_text",
        "z": "abef47bed1338c6e",
        "group": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ENABLED?",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 630,
        "y": 720,
        "wires": []
    },
    {
        "id": "b4d67f99f3171c38",
        "type": "inject",
        "z": "abef47bed1338c6e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "value",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 620,
        "wires": [
            [
                "efa0683ec02925a2"
            ]
        ]
    },
    {
        "id": "2dd17f1315c91e6f",
        "type": "inject",
        "z": "abef47bed1338c6e",
        "name": "Enable",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "state",
        "payload": "true",
        "payloadType": "bool",
        "x": 290,
        "y": 700,
        "wires": [
            [
                "efa0683ec02925a2"
            ]
        ]
    },
    {
        "id": "ee102d5833566caf",
        "type": "inject",
        "z": "abef47bed1338c6e",
        "name": "Disable",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "state",
        "payload": "false",
        "payloadType": "bool",
        "x": 290,
        "y": 740,
        "wires": [
            [
                "efa0683ec02925a2"
            ]
        ]
    },
    {
        "id": "efa0683ec02925a2",
        "type": "join",
        "z": "abef47bed1338c6e",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 470,
        "y": 660,
        "wires": [
            [
                "7811acf031472572"
            ]
        ]
    },
    {
        "id": "7811acf031472572",
        "type": "function",
        "z": "abef47bed1338c6e",
        "name": "Combine state and value",
        "func": "if (typeof msg.payload.state != \"undefined\") {\n    msg.enabled = msg.payload.state\n}\nmsg.payload = msg.payload.value\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 660,
        "wires": [
            [
                "fb1c58f2a3fe45be"
            ]
        ]
    },
    {
        "id": "6fab70c3067dc2cd",
        "type": "ui_switch",
        "z": "a16d4bc57e6d3071",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "switch",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 230,
        "y": 60,
        "wires": [
            [
                "f3ca6dc68d3a05d0"
            ]
        ]
    },
    {
        "id": "f3ca6dc68d3a05d0",
        "type": "function",
        "z": "a16d4bc57e6d3071",
        "name": "state",
        "func": "var state = context.get('state') || false;\n\nif (msg.topic == 'switch') {\n    state = msg.payload;\n    context.set('state', state);\n}\n\n// put your other code here, state contains the state of the switch\n// for example:\nif (msg.payload == 'get state') {\n    return {payload: state};\n}\n\nreturn;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 120,
        "wires": [
            [
                "31219bb3a58a1bdb"
            ]
        ]
    },
    {
        "id": "18ef9d311cbd7c63",
        "type": "inject",
        "z": "a16d4bc57e6d3071",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "get state",
        "payloadType": "str",
        "x": 100,
        "y": 160,
        "wires": [
            [
                "f3ca6dc68d3a05d0"
            ]
        ]
    },
    {
        "id": "31219bb3a58a1bdb",
        "type": "debug",
        "z": "a16d4bc57e6d3071",
        "name": "state",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 530,
        "y": 120,
        "wires": []
    },
    {
        "id": "27dd26f3a872487b",
        "type": "inject",
        "z": "a16d4bc57e6d3071",
        "name": "on",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 70,
        "y": 40,
        "wires": [
            [
                "6fab70c3067dc2cd"
            ]
        ]
    },
    {
        "id": "e6b77870949acd1a",
        "type": "inject",
        "z": "a16d4bc57e6d3071",
        "name": "off",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "6fab70c3067dc2cd"
            ]
        ]
    }
]